import*as t from"three";import{OrbitControls as e}from"three/addons/controls/OrbitControls.js";import{GLTFLoader as i}from"three/addons/loaders/GLTFLoader.js";import{DRACOLoader as o}from"three/addons/loaders/DRACOLoader.js";import{FBXLoader as a}from"three/addons/loaders/FBXLoader.js";import{EffectComposer as n}from"three/addons/postprocessing/EffectComposer.js";import{RenderPass as s}from"three/addons/postprocessing/RenderPass.js";import{UnrealBloomPass as r}from"three/addons/postprocessing/UnrealBloomPass.js";import{BokehPass as h}from"three/addons/postprocessing/BokehPass.js";import{OutputPass as l}from"three/addons/postprocessing/OutputPass.js";import{RoomEnvironment as d}from"three/addons/environments/RoomEnvironment.js";import{RGBELoader as m}from"three/addons/loaders/RGBELoader.js";import u from"three/addons/libs/stats.module.js";import{DynamicBones as p}from"./dynamicbones.mjs";const y=new URL("./playback-worklet.js",import.meta.url),g=new t.Quaternion,c=new t.Euler,x=new t.Vector3,f=new t.Vector3,L=new t.Box3,R=(new t.Matrix4,new t.Matrix4,new t.Vector3,new t.Vector3(0,0,1),new t.Vector3(1,0,0));new t.Vector3(0,1,0),new t.Vector3(0,0,1);class z{constructor(i,o=null){this.nodeAvatar=i,this.opt={jwtGet:null,ttsEndpoint:null,ttsApikey:null,ttsTrimStart:0,ttsTrimEnd:400,ttsLang:"fi-FI",ttsVoice:"fi-FI-Standard-A",ttsRate:1,ttsPitch:0,ttsVolume:0,mixerGainSpeech:null,mixerGainBackground:null,lipsyncLang:"fi",lipsyncModules:["fi","en","lt"],pcmSampleRate:22050,modelRoot:"Armature",modelPixelRatio:1,modelFPS:30,modelMovementFactor:1,cameraView:"full",dracoEnabled:!1,dracoDecoderPath:"https://www.gstatic.com/draco/v1/decoders/",cameraDistance:0,cameraX:0,cameraY:0,cameraRotateX:0,cameraRotateY:0,cameraRotateEnable:!0,cameraPanEnable:!1,cameraZoomEnable:!1,lightAmbientColor:16777215,lightAmbientIntensity:2,lightDirectColor:8947882,lightDirectIntensity:30,lightDirectPhi:1,lightDirectTheta:2,lightSpotIntensity:0,lightSpotColor:3377407,lightSpotPhi:.1,lightSpotTheta:4,lightSpotDispersion:1,avatarMood:"neutral",avatarMute:!1,avatarIdleEyeContact:.2,avatarIdleHeadMove:.5,avatarSpeakingEyeContact:.5,avatarSpeakingHeadMove:.5,avatarIgnoreCamera:!1,listeningSilenceThresholdLevel:40,listeningSilenceThresholdMs:2e3,listeningSilenceDurationMax:1e4,listeningActiveThresholdLevel:75,listeningActiveThresholdMs:300,listeningActiveDurationMax:24e4,update:null,statsNode:null,statsStyle:null},Object.assign(this.opt,o||{}),this.opt.statsNode&&(this.stats=new u,this.opt.statsStyle&&(this.stats.dom.style.cssText=this.opt.statsStyle),this.opt.statsNode.appendChild(this.stats.dom)),this.poseTemplates={side:{standing:!0,props:{"Hips.position":{x:0,y:1,z:0},"Hips.rotation":{x:-.003,y:-.017,z:.1},"Spine.rotation":{x:-.103,y:-.002,z:-.063},"Spine1.rotation":{x:.042,y:-.02,z:-.069},"Spine2.rotation":{x:.131,y:-.012,z:-.065},"Neck.rotation":{x:.027,y:.006,z:0},"Head.rotation":{x:.077,y:-.065,z:0},"LeftShoulder.rotation":{x:1.599,y:.084,z:-1.77},"LeftArm.rotation":{x:1.364,y:.052,z:-.044},"LeftForeArm.rotation":{x:.002,y:-.007,z:.331},"LeftHand.rotation":{x:.104,y:-.067,z:-.174},"LeftHandThumb1.rotation":{x:.231,y:.258,z:.355},"LeftHandThumb2.rotation":{x:-.106,y:-.339,z:-.454},"LeftHandThumb3.rotation":{x:-.02,y:-.142,z:-.004},"LeftHandIndex1.rotation":{x:.148,y:.032,z:-.069},"LeftHandIndex2.rotation":{x:.326,y:-.049,z:-.029},"LeftHandIndex3.rotation":{x:.247,y:-.053,z:-.073},"LeftHandMiddle1.rotation":{x:.238,y:-.057,z:-.089},"LeftHandMiddle2.rotation":{x:.469,y:-.036,z:-.081},"LeftHandMiddle3.rotation":{x:.206,y:-.015,z:-.017},"LeftHandRing1.rotation":{x:.187,y:-.118,z:-.157},"LeftHandRing2.rotation":{x:.579,y:.02,z:-.097},"LeftHandRing3.rotation":{x:.272,y:.021,z:-.063},"LeftHandPinky1.rotation":{x:.405,y:-.182,z:-.138},"LeftHandPinky2.rotation":{x:.613,y:.128,z:-.144},"LeftHandPinky3.rotation":{x:.268,y:.094,z:-.081},"RightShoulder.rotation":{x:1.541,y:.192,z:1.775},"RightArm.rotation":{x:1.273,y:-.352,z:-.067},"RightForeArm.rotation":{x:-.011,y:-.031,z:-.357},"RightHand.rotation":{x:-.008,y:.312,z:-.028},"RightHandThumb1.rotation":{x:.23,y:-.258,z:-.355},"RightHandThumb2.rotation":{x:-.107,y:.339,z:.454},"RightHandThumb3.rotation":{x:-.02,y:.142,z:.004},"RightHandIndex1.rotation":{x:.148,y:-.031,z:.069},"RightHandIndex2.rotation":{x:.326,y:.049,z:.029},"RightHandIndex3.rotation":{x:.247,y:.053,z:.073},"RightHandMiddle1.rotation":{x:.237,y:.057,z:.089},"RightHandMiddle2.rotation":{x:.469,y:.036,z:.081},"RightHandMiddle3.rotation":{x:.206,y:.015,z:.017},"RightHandRing1.rotation":{x:.204,y:.086,z:.135},"RightHandRing2.rotation":{x:.579,y:-.02,z:.098},"RightHandRing3.rotation":{x:.272,y:-.021,z:.063},"RightHandPinky1.rotation":{x:.404,y:.182,z:.137},"RightHandPinky2.rotation":{x:.613,y:-.128,z:.144},"RightHandPinky3.rotation":{x:.268,y:-.094,z:.081},"LeftUpLeg.rotation":{x:.096,y:.209,z:2.983},"LeftLeg.rotation":{x:-.053,y:.042,z:-.017},"LeftFoot.rotation":{x:1.091,y:.15,z:.026},"LeftToeBase.rotation":{x:.469,y:-.07,z:-.015},"RightUpLeg.rotation":{x:-.307,y:-.219,z:2.912},"RightLeg.rotation":{x:-.359,y:.164,z:.015},"RightFoot.rotation":{x:1.035,y:.11,z:.005},"RightToeBase.rotation":{x:.467,y:.07,z:.015}}},hip:{standing:!0,props:{"Hips.position":{x:0,y:1,z:0},"Hips.rotation":{x:-.036,y:.09,z:.135},"Spine.rotation":{x:.076,y:-.035,z:.01},"Spine1.rotation":{x:-.096,y:.013,z:-.094},"Spine2.rotation":{x:-.014,y:.002,z:-.097},"Neck.rotation":{x:.034,y:-.051,z:-.075},"Head.rotation":{x:.298,y:-.1,z:.154},"LeftShoulder.rotation":{x:1.694,y:.011,z:-1.68},"LeftArm.rotation":{x:1.343,y:.177,z:-.153},"LeftForeArm.rotation":{x:-.049,y:.134,z:.351},"LeftHand.rotation":{x:.057,y:-.189,z:-.026},"LeftHandThumb1.rotation":{x:.368,y:-.066,z:.438},"LeftHandThumb2.rotation":{x:-.156,y:.029,z:-.369},"LeftHandThumb3.rotation":{x:.034,y:-.009,z:.016},"LeftHandIndex1.rotation":{x:.157,y:-.002,z:-.171},"LeftHandIndex2.rotation":{x:.099,y:0,z:0},"LeftHandIndex3.rotation":{x:.1,y:0,z:0},"LeftHandMiddle1.rotation":{x:.222,y:-.019,z:-.16},"LeftHandMiddle2.rotation":{x:.142,y:0,z:0},"LeftHandMiddle3.rotation":{x:.141,y:0,z:0},"LeftHandRing1.rotation":{x:.333,y:-.039,z:-.174},"LeftHandRing2.rotation":{x:.214,y:0,z:0},"LeftHandRing3.rotation":{x:.213,y:0,z:0},"LeftHandPinky1.rotation":{x:.483,y:-.069,z:-.189},"LeftHandPinky2.rotation":{x:.312,y:0,z:0},"LeftHandPinky3.rotation":{x:.309,y:0,z:0},"RightShoulder.rotation":{x:1.597,y:.012,z:1.816},"RightArm.rotation":{x:.618,y:-1.274,z:-.266},"RightForeArm.rotation":{x:-.395,y:-.097,z:-1.342},"RightHand.rotation":{x:-.816,y:-.057,z:-.976},"RightHandThumb1.rotation":{x:.42,y:.23,z:-1.172},"RightHandThumb2.rotation":{x:-.027,y:.361,z:.122},"RightHandThumb3.rotation":{x:.076,y:.125,z:-.371},"RightHandIndex1.rotation":{x:-.158,y:-.045,z:.033},"RightHandIndex2.rotation":{x:.391,y:.051,z:.025},"RightHandIndex3.rotation":{x:.317,y:.058,z:.07},"RightHandMiddle1.rotation":{x:.486,y:.066,z:.014},"RightHandMiddle2.rotation":{x:.718,y:.055,z:.07},"RightHandMiddle3.rotation":{x:.453,y:.019,z:.013},"RightHandRing1.rotation":{x:.591,y:.241,z:.11},"RightHandRing2.rotation":{x:1.014,y:.023,z:.097},"RightHandRing3.rotation":{x:.708,y:.008,z:.066},"RightHandPinky1.rotation":{x:1.02,y:.305,z:.051},"RightHandPinky2.rotation":{x:1.187,y:-.028,z:.191},"RightHandPinky3.rotation":{x:.872,y:-.031,z:.121},"LeftUpLeg.rotation":{x:-.095,y:-.058,z:-3.338},"LeftLeg.rotation":{x:-.366,y:.287,z:-.021},"LeftFoot.rotation":{x:1.131,y:.21,z:.176},"LeftToeBase.rotation":{x:.739,y:-.068,z:-.001},"RightUpLeg.rotation":{x:-.502,y:.362,z:3.153},"RightLeg.rotation":{x:-1.002,y:.109,z:.008},"RightFoot.rotation":{x:.626,y:-.097,z:-.194},"RightToeBase.rotation":{x:1.33,y:.288,z:-.078}}},turn:{standing:!0,props:{"Hips.position":{x:0,y:1,z:0},"Hips.rotation":{x:-.07,y:-.604,z:-.004},"Spine.rotation":{x:-.007,y:.003,z:.071},"Spine1.rotation":{x:-.053,y:.024,z:-.06},"Spine2.rotation":{x:.074,y:.013,z:-.068},"Neck.rotation":{x:.03,y:.186,z:-.077},"Head.rotation":{x:.045,y:.243,z:-.086},"LeftShoulder.rotation":{x:1.717,y:-.085,z:-1.761},"LeftArm.rotation":{x:1.314,y:.07,z:-.057},"LeftForeArm.rotation":{x:-.151,y:.714,z:.302},"LeftHand.rotation":{x:-.069,y:.003,z:-.118},"LeftHandThumb1.rotation":{x:.23,y:.258,z:.354},"LeftHandThumb2.rotation":{x:-.107,y:-.338,z:-.455},"LeftHandThumb3.rotation":{x:-.015,y:-.142,z:.002},"LeftHandIndex1.rotation":{x:.145,y:.032,z:-.069},"LeftHandIndex2.rotation":{x:.323,y:-.049,z:-.028},"LeftHandIndex3.rotation":{x:.249,y:-.053,z:-.074},"LeftHandMiddle1.rotation":{x:.235,y:-.057,z:-.088},"LeftHandMiddle2.rotation":{x:.468,y:-.036,z:-.081},"LeftHandMiddle3.rotation":{x:.203,y:-.015,z:-.017},"LeftHandRing1.rotation":{x:.185,y:-.118,z:-.157},"LeftHandRing2.rotation":{x:.578,y:.02,z:-.097},"LeftHandRing3.rotation":{x:.27,y:.021,z:-.063},"LeftHandPinky1.rotation":{x:.404,y:-.182,z:-.138},"LeftHandPinky2.rotation":{x:.612,y:.128,z:-.144},"LeftHandPinky3.rotation":{x:.267,y:.094,z:-.081},"RightShoulder.rotation":{x:1.605,y:.17,z:1.625},"RightArm.rotation":{x:1.574,y:-.655,z:.388},"RightForeArm.rotation":{x:-.36,y:-.849,z:-.465},"RightHand.rotation":{x:.114,y:.416,z:-.069},"RightHandThumb1.rotation":{x:.486,y:.009,z:-.492},"RightHandThumb2.rotation":{x:-.073,y:-.01,z:.284},"RightHandThumb3.rotation":{x:-.054,y:-.006,z:.209},"RightHandIndex1.rotation":{x:.245,y:-.014,z:.052},"RightHandIndex2.rotation":{x:.155,y:0,z:0},"RightHandIndex3.rotation":{x:.153,y:0,z:0},"RightHandMiddle1.rotation":{x:.238,y:.004,z:.028},"RightHandMiddle2.rotation":{x:.15,y:0,z:0},"RightHandMiddle3.rotation":{x:.149,y:0,z:0},"RightHandRing1.rotation":{x:.267,y:.012,z:.007},"RightHandRing2.rotation":{x:.169,y:0,z:0},"RightHandRing3.rotation":{x:.167,y:0,z:0},"RightHandPinky1.rotation":{x:.304,y:.018,z:-.021},"RightHandPinky2.rotation":{x:.192,y:0,z:0},"RightHandPinky3.rotation":{x:.19,y:0,z:0},"LeftUpLeg.rotation":{x:-.001,y:-.058,z:-3.238},"LeftLeg.rotation":{x:-.29,y:.058,z:-.021},"LeftFoot.rotation":{x:1.288,y:.168,z:.183},"LeftToeBase.rotation":{x:.363,y:-.09,z:-.01},"RightUpLeg.rotation":{x:-.1,y:.36,z:3.062},"RightLeg.rotation":{x:-.67,y:-.304,z:.043},"RightFoot.rotation":{x:1.195,y:-.159,z:-.294},"RightToeBase.rotation":{x:.737,y:.164,z:-.002}}},bend:{bend:!0,standing:!0,props:{"Hips.position":{x:-.007,y:.943,z:-.001},"Hips.rotation":{x:1.488,y:-.633,z:1.435},"Spine.rotation":{x:-.126,y:.007,z:-.057},"Spine1.rotation":{x:-.134,y:.009,z:.01},"Spine2.rotation":{x:-.019,y:0,z:-.002},"Neck.rotation":{x:-.159,y:.572,z:-.108},"Head.rotation":{x:-.064,y:.716,z:-.257},"RightShoulder.rotation":{x:1.625,y:-.043,z:1.382},"RightArm.rotation":{x:.746,y:-.96,z:-1.009},"RightForeArm.rotation":{x:-.199,y:-.528,z:-.38},"RightHand.rotation":{x:-.261,y:-.043,z:-.027},"RightHandThumb1.rotation":{x:.172,y:-.138,z:-.445},"RightHandThumb2.rotation":{x:-.158,y:.327,z:.545},"RightHandThumb3.rotation":{x:-.062,y:.138,z:.152},"RightHandIndex1.rotation":{x:.328,y:-.005,z:.132},"RightHandIndex2.rotation":{x:.303,y:.049,z:.028},"RightHandIndex3.rotation":{x:.241,y:.046,z:.077},"RightHandMiddle1.rotation":{x:.309,y:.074,z:.089},"RightHandMiddle2.rotation":{x:.392,y:.036,z:.081},"RightHandMiddle3.rotation":{x:.199,y:.014,z:.019},"RightHandRing1.rotation":{x:.239,y:.143,z:.091},"RightHandRing2.rotation":{x:.275,y:-.02,z:.097},"RightHandRing3.rotation":{x:.248,y:-.023,z:.061},"RightHandPinky1.rotation":{x:.211,y:.154,z:.029},"RightHandPinky2.rotation":{x:.348,y:-.128,z:.144},"RightHandPinky3.rotation":{x:.21,y:-.091,z:.065},"LeftShoulder.rotation":{x:1.626,y:-.027,z:-1.367},"LeftArm.rotation":{x:1.048,y:.737,z:.712},"LeftForeArm.rotation":{x:-.508,y:.879,z:.625},"LeftHand.rotation":{x:.06,y:-.243,z:-.079},"LeftHandThumb1.rotation":{x:.187,y:-.072,z:.346},"LeftHandThumb2.rotation":{x:-.066,y:.008,z:-.256},"LeftHandThumb3.rotation":{x:-.085,y:.014,z:-.334},"LeftHandIndex1.rotation":{x:-.1,y:.016,z:-.058},"LeftHandIndex2.rotation":{x:.334,y:0,z:0},"LeftHandIndex3.rotation":{x:.281,y:0,z:0},"LeftHandMiddle1.rotation":{x:-.056,y:0,z:0},"LeftHandMiddle2.rotation":{x:.258,y:0,z:0},"LeftHandMiddle3.rotation":{x:.26,y:0,z:0},"LeftHandRing1.rotation":{x:-.067,y:-.002,z:.008},"LeftHandRing2.rotation":{x:.259,y:0,z:0},"LeftHandRing3.rotation":{x:.276,y:0,z:0},"LeftHandPinky1.rotation":{x:-.128,y:-.007,z:.042},"LeftHandPinky2.rotation":{x:.227,y:0,z:0},"LeftHandPinky3.rotation":{x:.145,y:0,z:0},"RightUpLeg.rotation":{x:-1.507,y:.2,z:-3.043},"RightLeg.rotation":{x:-.689,y:-.124,z:.017},"RightFoot.rotation":{x:.909,y:.008,z:-.093},"RightToeBase.rotation":{x:.842,y:.075,z:-.008},"LeftUpLeg.rotation":{x:-1.449,y:-.2,z:3.018},"LeftLeg.rotation":{x:-.74,y:-.115,z:-.008},"LeftFoot.rotation":{x:1.048,y:-.058,z:.117},"LeftToeBase.rotation":{x:.807,y:-.067,z:.003}}},back:{standing:!0,props:{"Hips.position":{x:0,y:1,z:0},"Hips.rotation":{x:-.732,y:-1.463,z:-.637},"Spine.rotation":{x:-.171,y:.106,z:.157},"Spine1.rotation":{x:-.044,y:.138,z:-.059},"Spine2.rotation":{x:.082,y:.133,z:-.074},"Neck.rotation":{x:.39,y:.591,z:-.248},"Head.rotation":{x:-.001,y:.596,z:-.057},"LeftShoulder.rotation":{x:1.676,y:.007,z:-1.892},"LeftArm.rotation":{x:-5.566,y:1.188,z:-.173},"LeftForeArm.rotation":{x:-.673,y:-.105,z:1.702},"LeftHand.rotation":{x:-.469,y:-.739,z:.003},"LeftHandThumb1.rotation":{x:.876,y:.274,z:.793},"LeftHandThumb2.rotation":{x:.161,y:-.23,z:-.172},"LeftHandThumb3.rotation":{x:.078,y:.027,z:.156},"LeftHandIndex1.rotation":{x:-.085,y:-.002,z:.009},"LeftHandIndex2.rotation":{x:.176,y:0,z:-.002},"LeftHandIndex3.rotation":{x:-.036,y:.001,z:-.035},"LeftHandMiddle1.rotation":{x:.015,y:.144,z:-.076},"LeftHandMiddle2.rotation":{x:.378,y:-.007,z:-.077},"LeftHandMiddle3.rotation":{x:-.141,y:-.001,z:.031},"LeftHandRing1.rotation":{x:.039,y:.02,z:-.2},"LeftHandRing2.rotation":{x:.25,y:-.002,z:-.073},"LeftHandRing3.rotation":{x:.236,y:.006,z:-.075},"LeftHandPinky1.rotation":{x:.172,y:-.033,z:-.275},"LeftHandPinky2.rotation":{x:.216,y:.043,z:-.054},"LeftHandPinky3.rotation":{x:.325,y:.078,z:-.13},"RightShoulder.rotation":{x:2.015,y:-.168,z:1.706},"RightArm.rotation":{x:.203,y:-1.258,z:-.782},"RightForeArm.rotation":{x:-.658,y:-.133,z:-1.401},"RightHand.rotation":{x:-1.504,y:.375,z:-.005},"RightHandThumb1.rotation":{x:.413,y:-.158,z:-1.121},"RightHandThumb2.rotation":{x:-.142,y:-.008,z:.209},"RightHandThumb3.rotation":{x:-.091,y:.021,z:.142},"RightHandIndex1.rotation":{x:-.167,y:.014,z:-.072},"RightHandIndex2.rotation":{x:.474,y:.009,z:.051},"RightHandIndex3.rotation":{x:.115,y:.006,z:.047},"RightHandMiddle1.rotation":{x:.385,y:.019,z:.144},"RightHandMiddle2.rotation":{x:.559,y:.035,z:.101},"RightHandMiddle3.rotation":{x:.229,y:0,z:.027},"RightHandRing1.rotation":{x:.48,y:.026,z:.23},"RightHandRing2.rotation":{x:.772,y:.038,z:.109},"RightHandRing3.rotation":{x:.622,y:.039,z:.106},"RightHandPinky1.rotation":{x:.767,y:.288,z:.353},"RightHandPinky2.rotation":{x:.886,y:.049,z:.122},"RightHandPinky3.rotation":{x:.662,y:.044,z:.113},"LeftUpLeg.rotation":{x:-.206,y:-.268,z:-3.343},"LeftLeg.rotation":{x:-.333,y:.757,z:-.043},"LeftFoot.rotation":{x:1.049,y:.167,z:.287},"LeftToeBase.rotation":{x:.672,y:-.069,z:-.004},"RightUpLeg.rotation":{x:.055,y:-.226,z:3.037},"RightLeg.rotation":{x:-.559,y:.39,z:-.001},"RightFoot.rotation":{x:1.2,y:.133,z:.085},"RightToeBase.rotation":{x:.92,y:.093,z:-.013}}},straight:{standing:!0,props:{"Hips.position":{x:0,y:.989,z:.001},"Hips.rotation":{x:.047,y:.007,z:-.007},"Spine.rotation":{x:-.143,y:-.007,z:.005},"Spine1.rotation":{x:-.043,y:-.014,z:.012},"Spine2.rotation":{x:.072,y:-.013,z:.013},"Neck.rotation":{x:.048,y:-.003,z:.012},"Head.rotation":{x:.05,y:-.02,z:-.017},"LeftShoulder.rotation":{x:1.62,y:-.166,z:-1.605},"LeftArm.rotation":{x:1.275,y:.544,z:-.092},"LeftForeArm.rotation":{x:0,y:0,z:.302},"LeftHand.rotation":{x:-.225,y:-.154,z:.11},"LeftHandThumb1.rotation":{x:.435,y:-.044,z:.457},"LeftHandThumb2.rotation":{x:-.028,y:.002,z:-.246},"LeftHandThumb3.rotation":{x:-.236,y:-.025,z:.113},"LeftHandIndex1.rotation":{x:.218,y:.008,z:-.081},"LeftHandIndex2.rotation":{x:.165,y:-.001,z:-.017},"LeftHandIndex3.rotation":{x:.165,y:-.001,z:-.017},"LeftHandMiddle1.rotation":{x:.235,y:-.011,z:-.065},"LeftHandMiddle2.rotation":{x:.182,y:-.002,z:-.019},"LeftHandMiddle3.rotation":{x:.182,y:-.002,z:-.019},"LeftHandRing1.rotation":{x:.316,y:-.017,z:.008},"LeftHandRing2.rotation":{x:.253,y:-.003,z:-.026},"LeftHandRing3.rotation":{x:.255,y:-.003,z:-.026},"LeftHandPinky1.rotation":{x:.336,y:-.062,z:.088},"LeftHandPinky2.rotation":{x:.276,y:-.004,z:-.028},"LeftHandPinky3.rotation":{x:.276,y:-.004,z:-.028},"RightShoulder.rotation":{x:1.615,y:.064,z:1.53},"RightArm.rotation":{x:1.313,y:-.424,z:.131},"RightForeArm.rotation":{x:0,y:0,z:-.317},"RightHand.rotation":{x:-.158,y:-.639,z:-.196},"RightHandThumb1.rotation":{x:.44,y:.048,z:-.549},"RightHandThumb2.rotation":{x:-.056,y:-.008,z:.274},"RightHandThumb3.rotation":{x:-.258,y:.031,z:-.095},"RightHandIndex1.rotation":{x:.169,y:-.011,z:.105},"RightHandIndex2.rotation":{x:.134,y:.001,z:.011},"RightHandIndex3.rotation":{x:.134,y:.001,z:.011},"RightHandMiddle1.rotation":{x:.288,y:.014,z:.092},"RightHandMiddle2.rotation":{x:.248,y:.003,z:.02},"RightHandMiddle3.rotation":{x:.249,y:.003,z:.02},"RightHandRing1.rotation":{x:.369,y:.019,z:.006},"RightHandRing2.rotation":{x:.321,y:.004,z:.026},"RightHandRing3.rotation":{x:.323,y:.004,z:.026},"RightHandPinky1.rotation":{x:.468,y:.085,z:-.03},"RightHandPinky2.rotation":{x:.427,y:.007,z:.034},"RightHandPinky3.rotation":{x:.142,y:.001,z:.012},"LeftUpLeg.rotation":{x:-.077,y:-.058,z:3.126},"LeftLeg.rotation":{x:-.252,y:.001,z:-.018},"LeftFoot.rotation":{x:1.315,y:-.064,z:.315},"LeftToeBase.rotation":{x:.577,y:-.07,z:-.009},"RightUpLeg.rotation":{x:-.083,y:-.032,z:3.124},"RightLeg.rotation":{x:-.272,y:-.003,z:.021},"RightFoot.rotation":{x:1.342,y:.076,z:-.222},"RightToeBase.rotation":{x:.44,y:.069,z:.016}}},wide:{standing:!0,props:{"Hips.position":{x:0,y:1.017,z:.016},"Hips.rotation":{x:.064,y:-.048,z:.059},"Spine.rotation":{x:-.123,y:0,z:-.018},"Spine1.rotation":{x:.014,y:.003,z:-.006},"Spine2.rotation":{x:.04,y:.003,z:-.007},"Neck.rotation":{x:.101,y:.007,z:-.035},"Head.rotation":{x:-.091,y:-.049,z:.105},"RightShoulder.rotation":{x:1.831,y:.017,z:1.731},"RightArm.rotation":{x:-1.673,y:-1.102,z:-3.132},"RightForeArm.rotation":{x:.265,y:.23,z:-.824},"RightHand.rotation":{x:-.52,y:.345,z:-.061},"RightHandThumb1.rotation":{x:.291,y:.056,z:-.428},"RightHandThumb2.rotation":{x:.025,y:.005,z:.166},"RightHandThumb3.rotation":{x:-.089,y:.009,z:.068},"RightHandIndex1.rotation":{x:.392,y:-.015,z:.11},"RightHandIndex2.rotation":{x:.391,y:.001,z:.004},"RightHandIndex3.rotation":{x:.326,y:0,z:.003},"RightHandMiddle1.rotation":{x:.285,y:.068,z:.081},"RightHandMiddle2.rotation":{x:.519,y:.004,z:.011},"RightHandMiddle3.rotation":{x:.252,y:0,z:.001},"RightHandRing1.rotation":{x:.207,y:.133,z:.146},"RightHandRing2.rotation":{x:.597,y:.004,z:.004},"RightHandRing3.rotation":{x:.292,y:.002,z:.012},"RightHandPinky1.rotation":{x:.338,y:.182,z:.136},"RightHandPinky2.rotation":{x:.533,y:.002,z:.004},"RightHandPinky3.rotation":{x:.194,y:0,z:.002},"LeftShoulder.rotation":{x:1.83,y:-.063,z:-1.808},"LeftArm.rotation":{x:-1.907,y:1.228,z:-2.959},"LeftForeArm.rotation":{x:-.159,y:.268,z:.572},"LeftHand.rotation":{x:.069,y:-.498,z:-.025},"LeftHandThumb1.rotation":{x:.738,y:.123,z:.178},"LeftHandThumb2.rotation":{x:-.26,y:.028,z:-.477},"LeftHandThumb3.rotation":{x:-.448,y:.093,z:-.661},"LeftHandIndex1.rotation":{x:1.064,y:.005,z:-.13},"LeftHandIndex2.rotation":{x:1.55,y:-.143,z:-.136},"LeftHandIndex3.rotation":{x:.722,y:-.076,z:-.127},"LeftHandMiddle1.rotation":{x:1.095,y:-.091,z:.006},"LeftHandMiddle2.rotation":{x:1.493,y:-.174,z:-.151},"LeftHandMiddle3.rotation":{x:.651,y:-.031,z:-.087},"LeftHandRing1.rotation":{x:1.083,y:-.224,z:.072},"LeftHandRing2.rotation":{x:1.145,y:-.107,z:-.195},"LeftHandRing3.rotation":{x:1.208,y:-.134,z:-.158},"LeftHandPinky1.rotation":{x:.964,y:-.383,z:.128},"LeftHandPinky2.rotation":{x:1.457,y:-.146,z:-.159},"LeftHandPinky3.rotation":{x:1.019,y:-.102,z:-.141},"RightUpLeg.rotation":{x:-.221,y:-.233,z:2.87},"RightLeg.rotation":{x:-.339,y:-.043,z:-.041},"RightFoot.rotation":{x:1.081,y:.177,z:.114},"RightToeBase.rotation":{x:.775,y:0,z:0},"LeftUpLeg.rotation":{x:-.185,y:.184,z:3.131},"LeftLeg.rotation":{x:-.408,y:.129,z:.02},"LeftFoot.rotation":{x:1.167,y:-.002,z:-.007},"LeftToeBase.rotation":{x:.723,y:0,z:0}}},oneknee:{kneeling:!0,props:{"Hips.position":{x:-.005,y:.415,z:-.017},"Hips.rotation":{x:-.25,y:.04,z:-.238},"Spine.rotation":{x:.037,y:.043,z:.047},"Spine1.rotation":{x:.317,y:.103,z:.066},"Spine2.rotation":{x:.433,y:.109,z:.054},"Neck.rotation":{x:-.156,y:-.092,z:.059},"Head.rotation":{x:-.398,y:-.032,z:.018},"RightShoulder.rotation":{x:1.546,y:.119,z:1.528},"RightArm.rotation":{x:.896,y:-.247,z:-.512},"RightForeArm.rotation":{x:.007,y:0,z:-1.622},"RightHand.rotation":{x:1.139,y:-.853,z:.874},"RightHandThumb1.rotation":{x:.176,y:.107,z:-.311},"RightHandThumb2.rotation":{x:-.047,y:-.003,z:.12},"RightHandThumb3.rotation":{x:0,y:0,z:0},"RightHandIndex1.rotation":{x:.186,y:.005,z:.125},"RightHandIndex2.rotation":{x:.454,y:.005,z:.015},"RightHandIndex3.rotation":{x:0,y:0,z:0},"RightHandMiddle1.rotation":{x:.444,y:.035,z:.127},"RightHandMiddle2.rotation":{x:.403,y:-.006,z:-.04},"RightHandMiddle3.rotation":{x:0,y:0,z:0},"RightHandRing1.rotation":{x:.543,y:.074,z:.121},"RightHandRing2.rotation":{x:.48,y:-.018,z:-.063},"RightHandRing3.rotation":{x:0,y:0,z:0},"RightHandPinky1.rotation":{x:.464,y:.086,z:.113},"RightHandPinky2.rotation":{x:.667,y:-.06,z:-.128},"RightHandPinky3.rotation":{x:0,y:0,z:0},"LeftShoulder.rotation":{x:1.545,y:-.116,z:-1.529},"LeftArm.rotation":{x:.799,y:.631,z:.556},"LeftForeArm.rotation":{x:-.002,y:.007,z:.926},"LeftHand.rotation":{x:-.508,y:.439,z:.502},"LeftHandThumb1.rotation":{x:.651,y:-.035,z:.308},"LeftHandThumb2.rotation":{x:-.053,y:.008,z:-.11},"LeftHandThumb3.rotation":{x:0,y:0,z:0},"LeftHandIndex1.rotation":{x:.662,y:-.053,z:-.116},"LeftHandIndex2.rotation":{x:.309,y:-.004,z:-.02},"LeftHandIndex3.rotation":{x:0,y:0,z:0},"LeftHandMiddle1.rotation":{x:.501,y:-.062,z:-.12},"LeftHandMiddle2.rotation":{x:.144,y:-.002,z:.016},"LeftHandMiddle3.rotation":{x:0,y:0,z:0},"LeftHandRing1.rotation":{x:.397,y:-.029,z:-.143},"LeftHandRing2.rotation":{x:.328,y:.01,z:.059},"LeftHandRing3.rotation":{x:0,y:0,z:0},"LeftHandPinky1.rotation":{x:.194,y:.008,z:-.164},"LeftHandPinky2.rotation":{x:.38,y:.031,z:.128},"LeftHandPinky3.rotation":{x:0,y:0,z:0},"RightUpLeg.rotation":{x:-1.594,y:-.251,z:2.792},"RightLeg.rotation":{x:-2.301,y:-.073,z:.055},"RightFoot.rotation":{x:1.553,y:-.207,z:-.094},"RightToeBase.rotation":{x:.459,y:.069,z:.016},"LeftUpLeg.rotation":{x:-.788,y:-.236,z:-2.881},"LeftLeg.rotation":{x:-2.703,y:.012,z:-.047},"LeftFoot.rotation":{x:2.191,y:-.102,z:.019},"LeftToeBase.rotation":{x:1.215,y:-.027,z:.01}}},kneel:{kneeling:!0,lying:!0,props:{"Hips.position":{x:0,y:.532,z:-.002},"Hips.rotation":{x:.018,y:-.008,z:-.017},"Spine.rotation":{x:-.139,y:-.01,z:.002},"Spine1.rotation":{x:.002,y:-.002,z:.001},"Spine2.rotation":{x:.028,y:-.002,z:.001},"Neck.rotation":{x:-.007,y:0,z:-.002},"Head.rotation":{x:-.02,y:-.008,z:-.004},"LeftShoulder.rotation":{x:1.77,y:-.428,z:-1.588},"LeftArm.rotation":{x:.911,y:.343,z:.083},"LeftForeArm.rotation":{x:0,y:0,z:.347},"LeftHand.rotation":{x:.033,y:-.052,z:-.105},"LeftHandThumb1.rotation":{x:.508,y:-.22,z:.708},"LeftHandThumb2.rotation":{x:-.323,y:-.139,z:-.56},"LeftHandThumb3.rotation":{x:-.328,y:.16,z:-.301},"LeftHandIndex1.rotation":{x:.178,y:.248,z:.045},"LeftHandIndex2.rotation":{x:.236,y:-.002,z:-.019},"LeftHandIndex3.rotation":{x:-.062,y:0,z:.005},"LeftHandMiddle1.rotation":{x:.123,y:-.005,z:-.019},"LeftHandMiddle2.rotation":{x:.589,y:-.014,z:-.045},"LeftHandMiddle3.rotation":{x:.231,y:-.002,z:-.019},"LeftHandRing1.rotation":{x:.196,y:-.008,z:-.091},"LeftHandRing2.rotation":{x:.483,y:-.009,z:-.038},"LeftHandRing3.rotation":{x:.367,y:-.005,z:-.029},"LeftHandPinky1.rotation":{x:.191,y:-.269,z:-.246},"LeftHandPinky2.rotation":{x:.37,y:-.006,z:-.029},"LeftHandPinky3.rotation":{x:.368,y:-.005,z:-.029},"RightShoulder.rotation":{x:1.73,y:.434,z:1.715},"RightArm.rotation":{x:.841,y:-.508,z:-.155},"RightForeArm.rotation":{x:0,y:0,z:-.355},"RightHand.rotation":{x:.091,y:.137,z:.197},"RightHandThumb1.rotation":{x:.33,y:.051,z:-.753},"RightHandThumb2.rotation":{x:-.113,y:.075,z:.612},"RightHandThumb3.rotation":{x:-.271,y:-.166,z:.164},"RightHandIndex1.rotation":{x:.073,y:.001,z:-.093},"RightHandIndex2.rotation":{x:.338,y:.006,z:.034},"RightHandIndex3.rotation":{x:.131,y:.001,z:.013},"RightHandMiddle1.rotation":{x:.13,y:.005,z:-.017},"RightHandMiddle2.rotation":{x:.602,y:.018,z:.058},"RightHandMiddle3.rotation":{x:-.031,y:0,z:-.003},"RightHandRing1.rotation":{x:.351,y:.019,z:.045},"RightHandRing2.rotation":{x:.19,y:.002,z:.019},"RightHandRing3.rotation":{x:.21,y:.002,z:.021},"RightHandPinky1.rotation":{x:.256,y:.17,z:.118},"RightHandPinky2.rotation":{x:.451,y:.01,z:.045},"RightHandPinky3.rotation":{x:.346,y:.006,z:.035},"LeftUpLeg.rotation":{x:-.06,y:.1,z:-2.918},"LeftLeg.rotation":{x:-1.933,y:-.01,z:.011},"LeftFoot.rotation":{x:.774,y:-.162,z:-.144},"LeftToeBase.rotation":{x:1.188,y:0,z:0},"RightUpLeg.rotation":{x:-.099,y:-.057,z:2.922},"RightLeg.rotation":{x:-1.93,y:.172,z:-.02},"RightFoot.rotation":{x:.644,y:.251,z:.212},"RightToeBase.rotation":{x:.638,y:-.034,z:-.001}}},sitting:{sitting:!0,lying:!0,props:{"Hips.position":{x:0,y:.117,z:.005},"Hips.rotation":{x:-.411,y:-.049,z:.056},"Spine.rotation":{x:.45,y:-.039,z:-.116},"Spine1.rotation":{x:.092,y:-.076,z:.08},"Spine2.rotation":{x:.073,y:.035,z:.066},"Neck.rotation":{x:.051,y:.053,z:-.079},"Head.rotation":{x:-.169,y:.009,z:.034},"LeftShoulder.rotation":{x:1.756,y:-.037,z:-1.301},"LeftArm.rotation":{x:-.098,y:.016,z:1.006},"LeftForeArm.rotation":{x:-.089,y:.08,z:.837},"LeftHand.rotation":{x:.262,y:-.399,z:.3},"LeftHandThumb1.rotation":{x:.149,y:-.043,z:.452},"LeftHandThumb2.rotation":{x:.032,y:.006,z:-.162},"LeftHandThumb3.rotation":{x:-.086,y:-.005,z:-.069},"LeftHandIndex1.rotation":{x:.145,y:.032,z:-.069},"LeftHandIndex2.rotation":{x:.325,y:-.001,z:-.004},"LeftHandIndex3.rotation":{x:.253,y:0,z:-.003},"LeftHandMiddle1.rotation":{x:.186,y:-.051,z:-.091},"LeftHandMiddle2.rotation":{x:.42,y:-.003,z:-.011},"LeftHandMiddle3.rotation":{x:.153,y:.001,z:-.001},"LeftHandRing1.rotation":{x:.087,y:-.19,z:-.078},"LeftHandRing2.rotation":{x:.488,y:-.004,z:-.005},"LeftHandRing3.rotation":{x:.183,y:-.001,z:-.012},"LeftHandPinky1.rotation":{x:.205,y:-.262,z:.051},"LeftHandPinky2.rotation":{x:.407,y:-.002,z:-.004},"LeftHandPinky3.rotation":{x:.068,y:0,z:-.002},"RightShoulder.rotation":{x:1.619,y:-.139,z:1.179},"RightArm.rotation":{x:.17,y:-.037,z:-1.07},"RightForeArm.rotation":{x:-.044,y:-.056,z:-.665},"RightHand.rotation":{x:.278,y:.454,z:-.253},"RightHandThumb1.rotation":{x:.173,y:.089,z:-.584},"RightHandThumb2.rotation":{x:-.003,y:-.004,z:.299},"RightHandThumb3.rotation":{x:-.133,y:-.002,z:.235},"RightHandIndex1.rotation":{x:.393,y:-.023,z:.108},"RightHandIndex2.rotation":{x:.391,y:.001,z:.004},"RightHandIndex3.rotation":{x:.326,y:0,z:.003},"RightHandMiddle1.rotation":{x:.285,y:.062,z:.086},"RightHandMiddle2.rotation":{x:.519,y:.003,z:.011},"RightHandMiddle3.rotation":{x:.252,y:-.001,z:.001},"RightHandRing1.rotation":{x:.207,y:.122,z:.155},"RightHandRing2.rotation":{x:.597,y:.004,z:.005},"RightHandRing3.rotation":{x:.292,y:.001,z:.012},"RightHandPinky1.rotation":{x:.338,y:.171,z:.149},"RightHandPinky2.rotation":{x:.533,y:.002,z:.004},"RightHandPinky3.rotation":{x:.194,y:0,z:.002},"LeftUpLeg.rotation":{x:-1.957,y:.083,z:-2.886},"LeftLeg.rotation":{x:-1.46,y:.123,z:.005},"LeftFoot.rotation":{x:-.013,y:.016,z:.09},"LeftToeBase.rotation":{x:.744,y:0,z:0},"RightUpLeg.rotation":{x:-1.994,y:.125,z:2.905},"RightLeg.rotation":{x:-1.5,y:-.202,z:-.006},"RightFoot.rotation":{x:-.012,y:-.065,z:.081},"RightToeBase.rotation":{x:.758,y:0,z:0}}}},this.gestureTemplates={handup:{"LeftShoulder.rotation":{x:[1.5,2,1,2],y:[.2,.4,1,2],z:[-1.5,-1.3,1,2]},"LeftArm.rotation":{x:[1.5,1.7,1,2],y:[-.6,-.4,1,2],z:[1,1.2,1,2]},"LeftForeArm.rotation":{x:-.815,y:[-.4,0,1,2],z:1.575},"LeftHand.rotation":{x:-.529,y:-.2,z:.022},"LeftHandThumb1.rotation":{x:.745,y:-.526,z:.604},"LeftHandThumb2.rotation":{x:-.107,y:-.01,z:-.142},"LeftHandThumb3.rotation":{x:0,y:.001,z:0},"LeftHandIndex1.rotation":{x:-.126,y:-.035,z:-.087},"LeftHandIndex2.rotation":{x:.255,y:.007,z:-.085},"LeftHandIndex3.rotation":{x:0,y:0,z:0},"LeftHandMiddle1.rotation":{x:-.019,y:-.128,z:-.082},"LeftHandMiddle2.rotation":{x:.233,y:.019,z:-.074},"LeftHandMiddle3.rotation":{x:0,y:0,z:0},"LeftHandRing1.rotation":{x:.005,y:-.241,z:-.122},"LeftHandRing2.rotation":{x:.261,y:.021,z:-.076},"LeftHandRing3.rotation":{x:0,y:0,z:0},"LeftHandPinky1.rotation":{x:.059,y:-.336,z:-.2},"LeftHandPinky2.rotation":{x:.153,y:.019,z:.001},"LeftHandPinky3.rotation":{x:0,y:0,z:0}},index:{"LeftShoulder.rotation":{x:[1.5,2,1,2],y:[.2,.4,1,2],z:[-1.5,-1.3,1,2]},"LeftArm.rotation":{x:[1.5,1.7,1,2],y:[-.6,-.4,1,2],z:[1,1.2,1,2]},"LeftForeArm.rotation":{x:-.815,y:[-.4,0,1,2],z:1.575},"LeftHand.rotation":{x:-.276,y:-.506,z:-.208},"LeftHandThumb1.rotation":{x:.579,y:.228,z:.363},"LeftHandThumb2.rotation":{x:-.027,y:-.04,z:-.662},"LeftHandThumb3.rotation":{x:0,y:.001,z:0},"LeftHandIndex1.rotation":{x:0,y:-.105,z:.225},"LeftHandIndex2.rotation":{x:.256,y:-.103,z:-.213},"LeftHandIndex3.rotation":{x:0,y:0,z:0},"LeftHandMiddle1.rotation":{x:1.453,y:.07,z:.021},"LeftHandMiddle2.rotation":{x:1.599,y:.062,z:.07},"LeftHandMiddle3.rotation":{x:0,y:0,z:0},"LeftHandRing1.rotation":{x:1.528,y:-.073,z:.052},"LeftHandRing2.rotation":{x:1.386,y:.044,z:.053},"LeftHandRing3.rotation":{x:0,y:0,z:0},"LeftHandPinky1.rotation":{x:1.65,y:-.204,z:.031},"LeftHandPinky2.rotation":{x:1.302,y:.071,z:.085},"LeftHandPinky3.rotation":{x:0,y:0,z:0}},ok:{"LeftShoulder.rotation":{x:[1.5,2,1,2],y:[.2,.4,1,2],z:[-1.5,-1.3,1,2]},"LeftArm.rotation":{x:[1.5,1.7,1,1],y:[-.6,-.4,1,2],z:[1,1.2,1,2]},"LeftForeArm.rotation":{x:-.415,y:[-.4,0,1,2],z:1.575},"LeftHand.rotation":{x:-.476,y:-.506,z:-.208},"LeftHandThumb1.rotation":{x:.703,y:.445,z:.899},"LeftHandThumb2.rotation":{x:-.312,y:-.04,z:-.938},"LeftHandThumb3.rotation":{x:-.37,y:.024,z:-.393},"LeftHandIndex1.rotation":{x:.8,y:-.086,z:-.091},"LeftHandIndex2.rotation":{x:1.123,y:-.046,z:-.074},"LeftHandIndex3.rotation":{x:.562,y:-.013,z:-.043},"LeftHandMiddle1.rotation":{x:-.019,y:-.128,z:-.082},"LeftHandMiddle2.rotation":{x:.233,y:.019,z:-.074},"LeftHandMiddle3.rotation":{x:0,y:0,z:0},"LeftHandRing1.rotation":{x:.005,y:-.241,z:-.122},"LeftHandRing2.rotation":{x:.261,y:.021,z:-.076},"LeftHandRing3.rotation":{x:0,y:0,z:0},"LeftHandPinky1.rotation":{x:.059,y:-.336,z:-.2},"LeftHandPinky2.rotation":{x:.153,y:.019,z:.001},"LeftHandPinky3.rotation":{x:0,y:0,z:0}},thumbup:{"LeftShoulder.rotation":{x:[1.5,2,1,2],y:[.2,.4,1,2],z:[-1.5,-1.3,1,2]},"LeftArm.rotation":{x:[1.5,1.7,1,2],y:[-.6,-.4,1,2],z:[1,1.2,1,2]},"LeftForeArm.rotation":{x:-.415,y:.206,z:1.575},"LeftHand.rotation":{x:-.276,y:-.506,z:-.208},"LeftHandThumb1.rotation":{x:.208,y:-.189,z:.685},"LeftHandThumb2.rotation":{x:.129,y:-.285,z:-.163},"LeftHandThumb3.rotation":{x:-.047,y:.068,z:.401},"LeftHandIndex1.rotation":{x:1.412,y:-.102,z:-.152},"LeftHandIndex2.rotation":{x:1.903,y:-.16,z:-.114},"LeftHandIndex3.rotation":{x:.535,y:-.017,z:-.062},"LeftHandMiddle1.rotation":{x:1.424,y:-.103,z:-.12},"LeftHandMiddle2.rotation":{x:1.919,y:-.162,z:-.114},"LeftHandMiddle3.rotation":{x:.44,y:-.012,z:-.051},"LeftHandRing1.rotation":{x:1.619,y:-.127,z:-.053},"LeftHandRing2.rotation":{x:1.898,y:-.16,z:-.115},"LeftHandRing3.rotation":{x:.262,y:-.004,z:-.031},"LeftHandPinky1.rotation":{x:1.661,y:-.131,z:-.016},"LeftHandPinky2.rotation":{x:1.715,y:-.067,z:-.13},"LeftHandPinky3.rotation":{x:.627,y:-.023,z:-.071}},thumbdown:{"LeftShoulder.rotation":{x:[1.5,2,1,2],y:[.2,.4,1,2],z:[-1.5,-1.3,1,2]},"LeftArm.rotation":{x:[1.5,1.7,1,2],y:[-.6,-.4,1,2],z:[1,1.2,1,2]},"LeftForeArm.rotation":{x:-2.015,y:.406,z:1.575},"LeftHand.rotation":{x:-.176,y:-.206,z:-.208},"LeftHandThumb1.rotation":{x:.208,y:-.189,z:.685},"LeftHandThumb2.rotation":{x:.129,y:-.285,z:-.163},"LeftHandThumb3.rotation":{x:-.047,y:.068,z:.401},"LeftHandIndex1.rotation":{x:1.412,y:-.102,z:-.152},"LeftHandIndex2.rotation":{x:1.903,y:-.16,z:-.114},"LeftHandIndex3.rotation":{x:.535,y:-.017,z:-.062},"LeftHandMiddle1.rotation":{x:1.424,y:-.103,z:-.12},"LeftHandMiddle2.rotation":{x:1.919,y:-.162,z:-.114},"LeftHandMiddle3.rotation":{x:.44,y:-.012,z:-.051},"LeftHandRing1.rotation":{x:1.619,y:-.127,z:-.053},"LeftHandRing2.rotation":{x:1.898,y:-.16,z:-.115},"LeftHandRing3.rotation":{x:.262,y:-.004,z:-.031},"LeftHandPinky1.rotation":{x:1.661,y:-.131,z:-.016},"LeftHandPinky2.rotation":{x:1.715,y:-.067,z:-.13},"LeftHandPinky3.rotation":{x:.627,y:-.023,z:-.071}},side:{"LeftShoulder.rotation":{x:1.755,y:-.035,z:-1.63},"LeftArm.rotation":{x:1.263,y:-.955,z:1.024},"LeftForeArm.rotation":{x:0,y:0,z:.8},"LeftHand.rotation":{x:-.36,y:-1.353,z:-.184},"LeftHandThumb1.rotation":{x:.137,y:-.049,z:.863},"LeftHandThumb2.rotation":{x:-.293,y:.153,z:-.193},"LeftHandThumb3.rotation":{x:-.271,y:-.17,z:.18},"LeftHandIndex1.rotation":{x:-.018,y:.007,z:.28},"LeftHandIndex2.rotation":{x:.247,y:-.003,z:-.025},"LeftHandIndex3.rotation":{x:.13,y:-.001,z:-.013},"LeftHandMiddle1.rotation":{x:.333,y:-.015,z:.182},"LeftHandMiddle2.rotation":{x:.313,y:-.005,z:-.032},"LeftHandMiddle3.rotation":{x:.294,y:-.004,z:-.03},"LeftHandRing1.rotation":{x:.456,y:-.028,z:-.092},"LeftHandRing2.rotation":{x:.53,y:-.014,z:-.052},"LeftHandRing3.rotation":{x:.478,y:-.012,z:-.047},"LeftHandPinky1.rotation":{x:.647,y:-.049,z:-.184},"LeftHandPinky2.rotation":{x:.29,y:-.004,z:-.029},"LeftHandPinky3.rotation":{x:.501,y:-.013,z:-.049}},shrug:{"Neck.rotation":{x:[-.3,.3,1,2],y:[-.3,.3,1,2],z:[-.1,.1]},"Head.rotation":{x:[-.3,.3],y:[-.3,.3],z:[-.1,.1]},"RightShoulder.rotation":{x:1.732,y:-.058,z:1.407},"RightArm.rotation":{x:1.305,y:.46,z:.118},"RightForeArm.rotation":{x:[0,2],y:[-1,.2],z:-1.637},"RightHand.rotation":{x:-.048,y:.165,z:-.39},"RightHandThumb1.rotation":{x:1.467,y:.599,z:-1.315},"RightHandThumb2.rotation":{x:-.255,y:-.123,z:.119},"RightHandThumb3.rotation":{x:0,y:-.002,z:0},"RightHandIndex1.rotation":{x:-.293,y:-.066,z:-.112},"RightHandIndex2.rotation":{x:.181,y:.007,z:.069},"RightHandIndex3.rotation":{x:0,y:0,z:0},"RightHandMiddle1.rotation":{x:-.063,y:-.041,z:.032},"RightHandMiddle2.rotation":{x:.149,y:.005,z:.05},"RightHandMiddle3.rotation":{x:0,y:0,z:0},"RightHandRing1.rotation":{x:.152,y:-.03,z:.132},"RightHandRing2.rotation":{x:.194,y:.007,z:.058},"RightHandRing3.rotation":{x:0,y:0,z:0},"RightHandPinky1.rotation":{x:.306,y:-.015,z:.257},"RightHandPinky2.rotation":{x:.15,y:-.003,z:-.003},"RightHandPinky3.rotation":{x:0,y:0,z:0},"LeftShoulder.rotation":{x:1.713,y:.141,z:-1.433},"LeftArm.rotation":{x:1.136,y:-.422,z:-.416},"LeftForeArm.rotation":{x:1.42,y:.123,z:1.506},"LeftHand.rotation":{x:.073,y:-.138,z:.064},"LeftHandThumb1.rotation":{x:1.467,y:-.599,z:1.314},"LeftHandThumb2.rotation":{x:-.255,y:.123,z:-.119},"LeftHandThumb3.rotation":{x:0,y:.001,z:0},"LeftHandIndex1.rotation":{x:-.293,y:.066,z:.112},"LeftHandIndex2.rotation":{x:.181,y:-.007,z:-.069},"LeftHandIndex3.rotation":{x:0,y:0,z:0},"LeftHandMiddle1.rotation":{x:-.062,y:.041,z:-.032},"LeftHandMiddle2.rotation":{x:.149,y:-.005,z:-.05},"LeftHandMiddle3.rotation":{x:0,y:0,z:0},"LeftHandRing1.rotation":{x:.152,y:.03,z:-.132},"LeftHandRing2.rotation":{x:.194,y:-.007,z:-.058},"LeftHandRing3.rotation":{x:0,y:0,z:0},"LeftHandPinky1.rotation":{x:.306,y:.015,z:-.257},"LeftHandPinky2.rotation":{x:.15,y:.003,z:.003},"LeftHandPinky3.rotation":{x:0,y:0,z:0}},namaste:{"RightShoulder.rotation":{x:1.758,y:.099,z:1.604},"RightArm.rotation":{x:.862,y:-.292,z:-.932},"RightForeArm.rotation":{x:.083,y:.066,z:-1.791},"RightHand.rotation":{x:-.52,y:-.001,z:-.176},"RightHandThumb1.rotation":{x:.227,y:.418,z:-.776},"RightHandThumb2.rotation":{x:-.011,y:-.003,z:.171},"RightHandThumb3.rotation":{x:-.041,y:-.001,z:-.013},"RightHandIndex1.rotation":{x:-.236,y:.003,z:-.028},"RightHandIndex2.rotation":{x:.004,y:0,z:.001},"RightHandIndex3.rotation":{x:.002,y:0,z:0},"RightHandMiddle1.rotation":{x:-.236,y:.003,z:-.028},"RightHandMiddle2.rotation":{x:.004,y:0,z:.001},"RightHandMiddle3.rotation":{x:.002,y:0,z:0},"RightHandRing1.rotation":{x:-.236,y:.003,z:-.028},"RightHandRing2.rotation":{x:.004,y:0,z:.001},"RightHandRing3.rotation":{x:.002,y:0,z:0},"RightHandPinky1.rotation":{x:-.236,y:.003,z:-.028},"RightHandPinky2.rotation":{x:.004,y:0,z:.001},"RightHandPinky3.rotation":{x:.002,y:0,z:0},"LeftShoulder.rotation":{x:1.711,y:-.002,z:-1.625},"LeftArm.rotation":{x:.683,y:.334,z:.977},"LeftForeArm.rotation":{x:.086,y:-.066,z:1.843},"LeftHand.rotation":{x:-.595,y:-.229,z:.096},"LeftHandThumb1.rotation":{x:.404,y:-.05,z:.537},"LeftHandThumb2.rotation":{x:-.02,y:.004,z:-.154},"LeftHandThumb3.rotation":{x:-.049,y:.002,z:-.019},"LeftHandIndex1.rotation":{x:-.113,y:-.001,z:.014},"LeftHandIndex2.rotation":{x:.003,y:0,z:0},"LeftHandIndex3.rotation":{x:.002,y:0,z:0},"LeftHandMiddle1.rotation":{x:-.113,y:-.001,z:.014},"LeftHandMiddle2.rotation":{x:.004,y:0,z:0},"LeftHandMiddle3.rotation":{x:.002,y:0,z:0},"LeftHandRing1.rotation":{x:-.113,y:-.001,z:.014},"LeftHandRing2.rotation":{x:.003,y:0,z:0},"LeftHandRing3.rotation":{x:.002,y:0,z:0},"LeftHandPinky1.rotation":{x:-.122,y:-.001,z:-.057},"LeftHandPinky2.rotation":{x:.012,y:.001,z:.07},"LeftHandPinky3.rotation":{x:.002,y:0,z:0}}},this.poseDelta={props:{"Hips.quaternion":{x:0,y:0,z:0},"Spine.quaternion":{x:0,y:0,z:0},"Spine1.quaternion":{x:0,y:0,z:0},"Neck.quaternion":{x:0,y:0,z:0},"Head.quaternion":{x:0,y:0,z:0},"Spine1.scale":{x:0,y:0,z:0},"Neck.scale":{x:0,y:0,z:0},"LeftArm.scale":{x:0,y:0,z:0},"RightArm.scale":{x:0,y:0,z:0}}},["Left","Right"].forEach((t=>{["Leg","UpLeg","Arm","ForeArm","Hand"].forEach((e=>{this.poseDelta.props[t+e+".quaternion"]={x:0,y:0,z:0}})),["HandThumb","HandIndex","HandMiddle","HandRing","HandPinky"].forEach((e=>{this.poseDelta.props[t+e+"1.quaternion"]={x:0,y:0,z:0},this.poseDelta.props[t+e+"2.quaternion"]={x:0,y:0,z:0},this.poseDelta.props[t+e+"3.quaternion"]={x:0,y:0,z:0}}))}));const a=new Set;Object.values(this.poseTemplates).forEach((t=>{Object.keys(this.propsToThreeObjects(t.props)).forEach((t=>a.add(t)))})),Object.keys(this.poseDelta.props).forEach((t=>{a.add(t)})),this.posePropNames=[...a],this.poseName="side",this.poseWeightOnLeft=!0,this.gesture=null,this.poseCurrentTemplate=this.poseTemplates[this.poseName],this.poseStraight=this.propsToThreeObjects(this.poseTemplates.straight.props),this.poseBase=this.poseFactory(this.poseCurrentTemplate),this.poseTarget=this.poseFactory(this.poseCurrentTemplate),this.poseAvatar=null,this.avatarHeight=1.7,this.animTemplateEyes={name:"eyes",idle:{alt:[{p:()=>this.avatar?.hasOwnProperty("avatarIdleEyeContact")?this.avatar.avatarIdleEyeContact:this.opt.avatarIdleEyeContact,delay:[200,5e3],dt:[200,[2e3,5e3],[3e3,1e4,1,2]],vs:{headMove:[this.avatar?.hasOwnProperty("avatarIdleHeadMove")?this.avatar.avatarIdleHeadMove:this.opt.avatarIdleHeadMove],eyesRotateY:[[-.6,.6]],eyesRotateX:[[-.2,.6]],eyeContact:[null,1]}},{delay:[200,5e3],dt:[200,[2e3,5e3,1,2]],vs:{headMove:[this.avatar?.hasOwnProperty("avatarIdleHeadMove")?this.avatar.avatarIdleHeadMove:this.opt.avatarIdleHeadMove],eyesRotateY:[[-.6,.6]],eyesRotateX:[[-.2,.6]]}}]},speaking:{alt:[{p:()=>this.avatar?.hasOwnProperty("avatarSpeakingEyeContact")?this.avatar.avatarSpeakingEyeContact:this.opt.avatarSpeakingEyeContact,delay:[200,5e3],dt:[0,[3e3,1e4,1,2],[2e3,5e3]],vs:{eyeContact:[1,null],headMove:[null,this.avatar?.hasOwnProperty("avatarSpeakingHeadMove")?this.avatar.avatarSpeakingHeadMove:this.opt.avatarSpeakingHeadMove,null],eyesRotateY:[null,[-.6,.6]],eyesRotateX:[null,[-.2,.6]]}},{delay:[200,5e3],dt:[200,[2e3,5e3,1,2]],vs:{headMove:[this.avatar?.hasOwnProperty("avatarSpeakingHeadMove")?this.avatar.avatarSpeakingHeadMove:this.opt.avatarSpeakingHeadMove,null],eyesRotateY:[[-.6,.6]],eyesRotateX:[[-.2,.6]]}}]}},this.animTemplateBlink={name:"blink",alt:[{p:.85,delay:[1e3,8e3,1,2],dt:[50,[100,300],100],vs:{eyeBlinkLeft:[1,1,0],eyeBlinkRight:[1,1,0]}},{delay:[1e3,4e3,1,2],dt:[50,[100,200],100,[10,400,0],50,[100,200],100],vs:{eyeBlinkLeft:[1,1,0,0,1,1,0],eyeBlinkRight:[1,1,0,0,1,1,0]}}]},this.animMoods={neutral:{baseline:{eyesLookDown:.1},speech:{deltaRate:0,deltaPitch:0,deltaVolume:0},anims:[{name:"breathing",delay:1500,dt:[1200,500,1e3],vs:{chestInhale:[.5,.5,0]}},{name:"pose",alt:[{p:.5,delay:[5e3,3e4],vs:{pose:["side"]}},{p:.3,delay:[5e3,3e4],vs:{pose:["hip"]},M:{delay:[5e3,3e4],vs:{pose:["wide"]}}},{delay:[5e3,3e4],vs:{pose:["straight"]}}]},{name:"head",idle:{delay:[0,1e3],dt:[[200,5e3]],vs:{bodyRotateX:[[-.04,.1]],bodyRotateY:[[-.3,.3]],bodyRotateZ:[[-.08,.08]]}},speaking:{dt:[[0,1e3,0]],vs:{bodyRotateX:[[-.05,.15,1,2]],bodyRotateY:[[-.1,.1]],bodyRotateZ:[[-.1,.1]]}}},this.animTemplateEyes,this.animTemplateBlink,{name:"mouth",delay:[1e3,5e3],dt:[[100,500],[100,5e3,2]],vs:{mouthRollLower:[[0,.3,2]],mouthRollUpper:[[0,.3,2]],mouthStretchLeft:[[0,.3]],mouthStretchRight:[[0,.3]],mouthPucker:[[0,.3]]}},{name:"misc",delay:[100,5e3],dt:[[100,500],[1e3,5e3,2]],vs:{eyeSquintLeft:[[0,.3,2]],eyeSquintRight:[[0,.3,2]],browInnerUp:[[0,.3,2]],browOuterUpLeft:[[0,.3,2]],browOuterUpRight:[[0,.3,2]]}}]},happy:{baseline:{mouthSmile:.2,eyesLookDown:.1},speech:{deltaRate:0,deltaPitch:.1,deltaVolume:0},anims:[{name:"breathing",delay:1500,dt:[1200,500,1e3],vs:{chestInhale:[.5,.5,0]}},{name:"pose",idle:{alt:[{p:.6,delay:[5e3,3e4],vs:{pose:["side"]}},{p:.2,delay:[5e3,3e4],vs:{pose:["hip"]},M:{delay:[5e3,3e4],vs:{pose:["side"]}}},{p:.1,delay:[5e3,3e4],vs:{pose:["straight"]}},{delay:[5e3,1e4],vs:{pose:["wide"]}},{delay:[1e3,3e3],vs:{pose:["turn"]}}]},speaking:{alt:[{p:.4,delay:[5e3,3e4],vs:{pose:["side"]}},{p:.4,delay:[5e3,3e4],vs:{pose:["straight"]}},{delay:[5e3,2e4],vs:{pose:["hip"]},M:{delay:[5e3,3e4],vs:{pose:["wide"]}}}]}},{name:"head",idle:{dt:[[1e3,5e3]],vs:{bodyRotateX:[[-.04,.1]],bodyRotateY:[[-.3,.3]],bodyRotateZ:[[-.08,.08]]}},speaking:{dt:[[0,1e3,0]],vs:{bodyRotateX:[[-.05,.15,1,2]],bodyRotateY:[[-.1,.1]],bodyRotateZ:[[-.1,.1]]}}},this.animTemplateEyes,this.animTemplateBlink,{name:"mouth",delay:[1e3,5e3],dt:[[100,500],[100,5e3,2]],vs:{mouthLeft:[[0,.3,2]],mouthSmile:[[0,.2,3]],mouthRollLower:[[0,.3,2]],mouthRollUpper:[[0,.3,2]],mouthStretchLeft:[[0,.3]],mouthStretchRight:[[0,.3]],mouthPucker:[[0,.3]]}},{name:"misc",delay:[100,5e3],dt:[[100,500],[1e3,5e3,2]],vs:{eyeSquintLeft:[[0,.3,2]],eyeSquintRight:[[0,.3,2]],browInnerUp:[[0,.3,2]],browOuterUpLeft:[[0,.3,2]],browOuterUpRight:[[0,.3,2]]}}]},angry:{baseline:{eyesLookDown:.1,browDownLeft:.6,browDownRight:.6,jawForward:.3,mouthFrownLeft:.7,mouthFrownRight:.7,mouthRollLower:.2,mouthShrugLower:.3,handFistLeft:1,handFistRight:1},speech:{deltaRate:-.2,deltaPitch:.2,deltaVolume:0},anims:[{name:"breathing",delay:500,dt:[1e3,500,1e3],vs:{chestInhale:[.7,.7,0]}},{name:"pose",alt:[{p:.4,delay:[5e3,3e4],vs:{pose:["side"]}},{p:.4,delay:[5e3,3e4],vs:{pose:["straight"]}},{p:.2,delay:[5e3,3e4],vs:{pose:["hip"]},M:{delay:[5e3,3e4],vs:{pose:["wide"]}}}]},{name:"head",idle:{delay:[100,500],dt:[[200,5e3]],vs:{bodyRotateX:[[-.04,.1]],bodyRotateY:[[-.2,.2]],bodyRotateZ:[[-.08,.08]]}},speaking:{dt:[[0,1e3,0]],vs:{bodyRotateX:[[-.05,.15,1,2]],bodyRotateY:[[-.1,.1]],bodyRotateZ:[[-.1,.1]]}}},this.animTemplateEyes,this.animTemplateBlink,{name:"mouth",delay:[1e3,5e3],dt:[[100,500],[100,5e3,2]],vs:{mouthRollLower:[[0,.3,2]],mouthRollUpper:[[0,.3,2]],mouthStretchLeft:[[0,.3]],mouthStretchRight:[[0,.3]],mouthPucker:[[0,.3]]}},{name:"misc",delay:[100,5e3],dt:[[100,500],[1e3,5e3,2]],vs:{eyeSquintLeft:[[0,.3,2]],eyeSquintRight:[[0,.3,2]],browInnerUp:[[0,.3,2]],browOuterUpLeft:[[0,.3,2]],browOuterUpRight:[[0,.3,2]]}}]},sad:{baseline:{eyesLookDown:.2,browDownRight:.1,browInnerUp:.6,browOuterUpRight:.2,eyeSquintLeft:.7,eyeSquintRight:.7,mouthFrownLeft:.8,mouthFrownRight:.8,mouthLeft:.2,mouthPucker:.5,mouthRollLower:.2,mouthRollUpper:.2,mouthShrugLower:.2,mouthShrugUpper:.2,mouthStretchLeft:.4},speech:{deltaRate:-.2,deltaPitch:-.2,deltaVolume:0},anims:[{name:"breathing",delay:1500,dt:[1e3,500,1e3],vs:{chestInhale:[.3,.3,0]}},{name:"pose",alt:[{p:.4,delay:[5e3,3e4],vs:{pose:["side"]}},{p:.4,delay:[5e3,3e4],vs:{pose:["straight"]}},{delay:[5e3,2e4],vs:{pose:["side"]},full:{delay:[5e3,2e4],vs:{pose:["oneknee"]}}}]},{name:"head",idle:{delay:[100,500],dt:[[200,5e3]],vs:{bodyRotateX:[[-.04,.1]],bodyRotateY:[[-.2,.2]],bodyRotateZ:[[-.08,.08]]}},speaking:{dt:[[0,1e3,0]],vs:{bodyRotateX:[[-.05,.15,1,2]],bodyRotateY:[[-.1,.1]],bodyRotateZ:[[-.1,.1]]}}},this.animTemplateEyes,this.animTemplateBlink,{name:"mouth",delay:[1e3,5e3],dt:[[100,500],[100,5e3,2]],vs:{mouthRollLower:[[0,.3,2]],mouthRollUpper:[[0,.3,2]],mouthStretchLeft:[[0,.3]],mouthStretchRight:[[0,.3]],mouthPucker:[[0,.3]]}},{name:"misc",delay:[100,5e3],dt:[[100,500],[1e3,5e3,2]],vs:{eyeSquintLeft:[[0,.3,2]],eyeSquintRight:[[0,.3,2]],browInnerUp:[[0,.3,2]],browOuterUpLeft:[[0,.3,2]],browOuterUpRight:[[0,.3,2]]}}]},fear:{baseline:{browInnerUp:.7,eyeSquintLeft:.5,eyeSquintRight:.5,eyeWideLeft:.6,eyeWideRight:.6,mouthClose:.1,mouthFunnel:.3,mouthShrugLower:.5,mouthShrugUpper:.5},speech:{deltaRate:-.2,deltaPitch:0,deltaVolume:0},anims:[{name:"breathing",delay:500,dt:[1e3,500,1e3],vs:{chestInhale:[.7,.7,0]}},{name:"pose",alt:[{p:.8,delay:[5e3,3e4],vs:{pose:["side"]}},{delay:[5e3,3e4],vs:{pose:["straight"]}},{delay:[5e3,2e4],vs:{pose:["wide"]}},{delay:[5e3,2e4],vs:{pose:["side"]},full:{delay:[5e3,2e4],vs:{pose:["oneknee"]}}}]},{name:"head",idle:{delay:[100,500],dt:[[200,3e3]],vs:{bodyRotateX:[[-.06,.12]],bodyRotateY:[[-.7,.7]],bodyRotateZ:[[-.1,.1]]}},speaking:{dt:[[0,1e3,0]],vs:{bodyRotateX:[[-.05,.15,1,2]],bodyRotateY:[[-.1,.1]],bodyRotateZ:[[-.1,.1]]}}},this.animTemplateEyes,this.animTemplateBlink,{name:"mouth",delay:[1e3,5e3],dt:[[100,500],[100,5e3,2]],vs:{mouthRollLower:[[0,.3,2]],mouthRollUpper:[[0,.3,2]],mouthStretchLeft:[[0,.3]],mouthStretchRight:[[0,.3]],mouthPucker:[[0,.3]]}},{name:"misc",delay:[100,5e3],dt:[[100,500],[1e3,5e3,2]],vs:{eyeSquintLeft:[[0,.3,2]],eyeSquintRight:[[0,.3,2]],browInnerUp:[[0,.3,2]],browOuterUpLeft:[[0,.3,2]],browOuterUpRight:[[0,.3,2]]}}]},disgust:{baseline:{browDownLeft:.7,browDownRight:.1,browInnerUp:.3,eyeSquintLeft:1,eyeSquintRight:1,eyeWideLeft:.5,eyeWideRight:.5,eyesRotateX:.05,mouthLeft:.4,mouthPressLeft:.3,mouthRollLower:.3,mouthShrugLower:.3,mouthShrugUpper:.8,mouthUpperUpLeft:.3,noseSneerLeft:1,noseSneerRight:.7},speech:{deltaRate:-.2,deltaPitch:0,deltaVolume:0},anims:[{name:"breathing",delay:1500,dt:[1e3,500,1e3],vs:{chestInhale:[.5,.5,0]}},{name:"pose",alt:[{delay:[5e3,2e4],vs:{pose:["side"]}}]},{name:"head",idle:{delay:[100,500],dt:[[200,5e3]],vs:{bodyRotateX:[[-.04,.1]],bodyRotateY:[[-.2,.2]],bodyRotateZ:[[-.08,.08]]}},speaking:{dt:[[0,1e3,0]],vs:{bodyRotateX:[[-.05,.15,1,2]],bodyRotateY:[[-.1,.1]],bodyRotateZ:[[-.1,.1]]}}},this.animTemplateEyes,this.animTemplateBlink,{name:"mouth",delay:[1e3,5e3],dt:[[100,500],[100,5e3,2]],vs:{mouthRollLower:[[0,.3,2]],mouthRollUpper:[[0,.3,2]],mouthStretchLeft:[[0,.3]],mouthStretchRight:[[0,.3]],mouthPucker:[[0,.3]]}},{name:"misc",delay:[100,5e3],dt:[[100,500],[1e3,5e3,2]],vs:{eyeSquintLeft:[[0,.3,2]],eyeSquintRight:[[0,.3,2]],browInnerUp:[[0,.3,2]],browOuterUpLeft:[[0,.3,2]],browOuterUpRight:[[0,.3,2]]}}]},love:{baseline:{browInnerUp:.4,browOuterUpLeft:.2,browOuterUpRight:.2,mouthSmile:.2,eyeBlinkLeft:.6,eyeBlinkRight:.6,eyeWideLeft:.7,eyeWideRight:.7,bodyRotateX:.1,mouthDimpleLeft:.1,mouthDimpleRight:.1,mouthPressLeft:.2,mouthShrugUpper:.2,mouthUpperUpLeft:.1,mouthUpperUpRight:.1},speech:{deltaRate:-.1,deltaPitch:-.7,deltaVolume:0},anims:[{name:"breathing",delay:1500,dt:[1500,500,1500],vs:{chestInhale:[.8,.8,0]}},{name:"pose",alt:[{p:.4,delay:[5e3,3e4],vs:{pose:["side"]}},{p:.2,delay:[5e3,3e4],vs:{pose:["straight"]}},{p:.2,delay:[5e3,3e4],vs:{pose:["hip"]},M:{delay:[5e3,3e4],vs:{pose:["side"]}}},{delay:[5e3,1e4],vs:{pose:["side"]},full:{delay:[5e3,1e4],vs:{pose:["kneel"]}}},{delay:[1e3,3e3],vs:{pose:["turn"]},M:{delay:[1e3,3e3],vs:{pose:["wide"]}}},{delay:[1e3,3e3],vs:{pose:["back"]},M:{delay:[1e3,3e3],vs:{pose:["wide"]}}},{delay:[5e3,2e4],vs:{pose:["side"]},M:{delay:[5e3,2e4],vs:{pose:["side"]}},full:{delay:[5e3,2e4],vs:{pose:["bend"]}}},{delay:[1e3,3e3],vs:{pose:["side"]},full:{delay:[5e3,1e4],vs:{pose:["oneknee"]}}}]},{name:"head",idle:{dt:[[1e3,5e3]],vs:{bodyRotateX:[[-.04,.1]],bodyRotateY:[[-.3,.3]],bodyRotateZ:[[-.08,.08]]}},speaking:{dt:[[0,1e3,0]],vs:{bodyRotateX:[[-.05,.15,1,2]],bodyRotateY:[[-.1,.1]],bodyRotateZ:[[-.1,.1]]}}},this.animTemplateEyes,this.deepCopy(this.animTemplateBlink,(t=>{t.alt[0].delay[0]=t.alt[1].delay[0]=2e3})),{name:"mouth",delay:[1e3,5e3],dt:[[100,500],[100,5e3,2]],vs:{mouthLeft:[[0,.3,2]],mouthRollLower:[[0,.3,2]],mouthRollUpper:[[0,.3,2]],mouthStretchLeft:[[0,.3]],mouthStretchRight:[[0,.3]],mouthPucker:[[0,.3]]}},{name:"misc",delay:[100,5e3],dt:[[500,1e3],[1e3,5e3,2]],vs:{eyeSquintLeft:[[0,.3,2]],eyeSquintRight:[[0,.3,2]],browInnerUp:[[.3,.6,2]],browOuterUpLeft:[[.1,.3,2]],browOuterUpRight:[[.1,.3,2]]}}]},sleep:{baseline:{eyeBlinkLeft:1,eyeBlinkRight:1,eyesClosed:.6},speech:{deltaRate:0,deltaPitch:-.2,deltaVolume:0},anims:[{name:"breathing",delay:1500,dt:[1e3,500,1e3],vs:{chestInhale:[.6,.6,0]}},{name:"pose",alt:[{delay:[5e3,2e4],vs:{pose:["side"]}}]},{name:"head",delay:[1e3,5e3],dt:[[2e3,1e4]],vs:{bodyRotateX:[[0,.4]],bodyRotateY:[[-.1,.1]],bodyRotateZ:[[-.04,.04]]}},{name:"eyes",delay:10010,dt:[],vs:{}},{name:"blink",delay:10020,dt:[],vs:{}},{name:"mouth",delay:10030,dt:[],vs:{}},{name:"misc",delay:10040,dt:[],vs:{}}]}},this.moodName=this.opt.avatarMood||"neutral",this.mood=this.animMoods[this.moodName],this.mood||(this.moodName="neutral",this.mood=this.animMoods.neutral),this.animEmojis={"😐":{dt:[300,2e3],rescale:[0,1],vs:{pose:["straight"],browInnerUp:[.4],eyeWideLeft:[.7],eyeWideRight:[.7],mouthPressLeft:[.6],mouthPressRight:[.6],mouthRollLower:[.3],mouthStretchLeft:[1],mouthStretchRight:[1]}},"😶":{link:"😐"},"😏":{dt:[300,2e3],rescale:[0,1],vs:{eyeContact:[0],browDownRight:[.1],browInnerUp:[.7],browOuterUpRight:[.2],eyeLookInRight:[.7],eyeLookOutLeft:[.7],eyeSquintLeft:[1],eyeSquintRight:[.8],eyesRotateY:[.7],mouthLeft:[.4],mouthPucker:[.4],mouthShrugLower:[.3],mouthShrugUpper:[.2],mouthSmile:[.2],mouthSmileLeft:[.4],mouthSmileRight:[.2],mouthStretchLeft:[.5],mouthUpperUpLeft:[.6],noseSneerLeft:[.7]}},"🙂":{dt:[300,2e3],rescale:[0,1],vs:{mouthSmile:[.5]}},"🙃":{link:"🙂"},"😊":{dt:[300,2e3],rescale:[0,1],vs:{browInnerUp:[.6],eyeSquintLeft:[1],eyeSquintRight:[1],mouthSmile:[.7],noseSneerLeft:[.7],noseSneerRight:[.7]}},"😇":{link:"😊"},"😀":{dt:[300,2e3],rescale:[0,1],vs:{browInnerUp:[.6],jawOpen:[.1],mouthDimpleLeft:[.2],mouthDimpleRight:[.2],mouthOpen:[.3],mouthPressLeft:[.3],mouthPressRight:[.3],mouthRollLower:[.4],mouthShrugUpper:[.4],mouthSmile:[.7],mouthUpperUpLeft:[.3],mouthUpperUpRight:[.3],noseSneerLeft:[.4],noseSneerRight:[.4]}},"😃":{dt:[300,2e3],rescale:[0,1],vs:{browInnerUp:[.6],eyeWideLeft:[.7],eyeWideRight:[.7],jawOpen:[.1],mouthDimpleLeft:[.2],mouthDimpleRight:[.2],mouthOpen:[.3],mouthPressLeft:[.3],mouthPressRight:[.3],mouthRollLower:[.4],mouthShrugUpper:[.4],mouthSmile:[.7],mouthUpperUpLeft:[.3],mouthUpperUpRight:[.3],noseSneerLeft:[.4],noseSneerRight:[.4]}},"😄":{dt:[300,2e3],rescale:[0,1],vs:{browInnerUp:[.3],eyeSquintLeft:[1],eyeSquintRight:[1],jawOpen:[.2],mouthDimpleLeft:[.2],mouthDimpleRight:[.2],mouthOpen:[.3],mouthPressLeft:[.3],mouthPressRight:[.3],mouthRollLower:[.4],mouthShrugUpper:[.4],mouthSmile:[.7],mouthUpperUpLeft:[.3],mouthUpperUpRight:[.3],noseSneerLeft:[.4],noseSneerRight:[.4]}},"😁":{dt:[300,2e3],rescale:[0,1],vs:{browInnerUp:[.3],eyeSquintLeft:[1],eyeSquintRight:[1],jawOpen:[.3],mouthDimpleLeft:[.2],mouthDimpleRight:[.2],mouthPressLeft:[.5],mouthPressRight:[.5],mouthShrugUpper:[.4],mouthSmile:[.7],mouthUpperUpLeft:[.3],mouthUpperUpRight:[.3],noseSneerLeft:[.4],noseSneerRight:[.4]}},"😆":{dt:[300,2e3],rescale:[0,1],vs:{browInnerUp:[.3],eyeSquintLeft:[1],eyeSquintRight:[1],eyesClosed:[.6],jawOpen:[.3],mouthDimpleLeft:[.2],mouthDimpleRight:[.2],mouthPressLeft:[.5],mouthPressRight:[.5],mouthShrugUpper:[.4],mouthSmile:[.7],mouthUpperUpLeft:[.3],mouthUpperUpRight:[.3],noseSneerLeft:[.4],noseSneerRight:[.4]}},"😝":{dt:[300,100,1500,500,500],rescale:[0,0,1,0,0],vs:{browInnerUp:[.8],eyesClosed:[1],jawOpen:[.7],mouthFunnel:[.5],mouthSmile:[1],tongueOut:[0,1,1,0]}},"😋":{link:"😝"},"😛":{link:"😝"},"😛":{link:"😝"},"😜":{link:"😝"},"🤪":{link:"😝"},"😂":{dt:[300,2e3],rescale:[0,1],vs:{browInnerUp:[.3],eyeSquintLeft:[1],eyeSquintRight:[1],eyesClosed:[.6],jawOpen:[.3],mouthDimpleLeft:[.2],mouthDimpleRight:[.2],mouthPressLeft:[.5],mouthPressRight:[.5],mouthShrugUpper:[.4],mouthSmile:[.7],mouthUpperUpLeft:[.3],mouthUpperUpRight:[.3],noseSneerLeft:[.4],noseSneerRight:[.4]}},"🤣":{link:"😂"},"😅":{link:"😂"},"😉":{dt:[500,200,500,500],rescale:[0,0,0,1],vs:{mouthSmile:[.5],mouthOpen:[.2],mouthSmileLeft:[0,.5,0],eyeBlinkLeft:[0,.7,0],eyeBlinkRight:[0,0,0],bodyRotateX:[.05,.05,.05,0],bodyRotateZ:[-.05,-.05,-.05,0],browDownLeft:[0,.7,0],cheekSquintLeft:[0,.7,0],eyeSquintLeft:[0,1,0],eyesClosed:[0]}},"😭":{dt:[1e3,1e3],rescale:[0,1],vs:{browInnerUp:[1],eyeSquintLeft:[1],eyeSquintRight:[1],eyesClosed:[.1],jawOpen:[0],mouthFrownLeft:[1],mouthFrownRight:[1],mouthOpen:[.5],mouthPucker:[.5],mouthUpperUpLeft:[.6],mouthUpperUpRight:[.6]}},"🥺":{dt:[1e3,1e3],rescale:[0,1],vs:{browDownLeft:[.2],browDownRight:[.2],browInnerUp:[1],eyeWideLeft:[.9],eyeWideRight:[.9],eyesClosed:[.1],mouthClose:[.2],mouthFrownLeft:[1],mouthFrownRight:[1],mouthPressLeft:[.4],mouthPressRight:[.4],mouthPucker:[1],mouthRollLower:[.6],mouthRollUpper:[.2],mouthUpperUpLeft:[.8],mouthUpperUpRight:[.8]}},"😞":{dt:[1e3,1e3],rescale:[0,1],vs:{browInnerUp:[.7],eyeSquintLeft:[1],eyeSquintRight:[1],eyesClosed:[.5],bodyRotateX:[.3],mouthClose:[.2],mouthFrownLeft:[1],mouthFrownRight:[1],mouthPucker:[1],mouthRollLower:[1],mouthShrugLower:[.2],mouthUpperUpLeft:[.8],mouthUpperUpRight:[.8]}},"😔":{dt:[1e3,1e3],rescale:[0,1],vs:{browInnerUp:[1],eyeSquintLeft:[1],eyeSquintRight:[1],eyesClosed:[.5],bodyRotateX:[.3],mouthClose:[.2],mouthFrownLeft:[1],mouthFrownRight:[1],mouthPressLeft:[.4],mouthPressRight:[.4],mouthPucker:[1],mouthRollLower:[.6],mouthRollUpper:[.2],mouthUpperUpLeft:[.8],mouthUpperUpRight:[.8]}},"😳":{dt:[1e3,1e3],rescale:[0,1],vs:{browInnerUp:[1],eyeWideLeft:[.5],eyeWideRight:[.5],eyesRotateY:[.05],eyesRotateX:[.05],mouthClose:[.2],mouthFunnel:[.5],mouthPucker:[.4],mouthRollLower:[.4],mouthRollUpper:[.4]}},"☹️":{dt:[500,1500],rescale:[0,1],vs:{mouthFrownLeft:[1],mouthFrownRight:[1],mouthPucker:[.1],mouthRollLower:[.8]}},"😚":{dt:[500,1e3,1e3],rescale:[0,1,0],vs:{browInnerUp:[.6],eyeBlinkLeft:[1],eyeBlinkRight:[1],eyeSquintLeft:[1],eyeSquintRight:[1],mouthPucker:[0,.5],noseSneerLeft:[0,.7],noseSneerRight:[0,.7],viseme_U:[0,1]}},"😘":{dt:[500,500,200,500],rescale:[0,0,0,1],vs:{browInnerUp:[.6],eyeBlinkLeft:[0,0,1,0],eyeBlinkRight:[0],eyesRotateY:[0],bodyRotateY:[0],bodyRotateX:[0,.05,.05,0],bodyRotateZ:[0,-.05,-.05,0],eyeSquintLeft:[1],eyeSquintRight:[1],mouthPucker:[0,.5,0],noseSneerLeft:[0,.7],noseSneerRight:[.7],viseme_U:[0,1]}},"🥰":{dt:[1e3,1e3],rescale:[0,1],vs:{browInnerUp:[.6],eyeSquintLeft:[1],eyeSquintRight:[1],mouthSmile:[.7],noseSneerLeft:[.7],noseSneerRight:[.7]}},"😍":{dt:[1e3,1e3],rescale:[0,1],vs:{browInnerUp:[.6],jawOpen:[.1],mouthDimpleLeft:[.2],mouthDimpleRight:[.2],mouthOpen:[.3],mouthPressLeft:[.3],mouthPressRight:[.3],mouthRollLower:[.4],mouthShrugUpper:[.4],mouthSmile:[.7],mouthUpperUpLeft:[.3],mouthUpperUpRight:[.3],noseSneerLeft:[.4],noseSneerRight:[.4]}},"🤩":{link:"😍"},"😡":{dt:[1e3,1500],rescale:[0,1],vs:{browDownLeft:[1],browDownRight:[1],eyesLookUp:[.2],jawForward:[.3],mouthFrownLeft:[1],mouthFrownRight:[1],bodyRotateX:[.15]}},"😠":{dt:[1e3,1500],rescale:[0,1],vs:{browDownLeft:[1],browDownRight:[1],eyesLookUp:[.2],jawForward:[.3],mouthFrownLeft:[1],mouthFrownRight:[1],bodyRotateX:[.15]}},"🤬":{link:"😠"},"😒":{dt:[1e3,1e3],rescale:[0,1],vs:{eyeContact:[0],browDownRight:[.1],browInnerUp:[.7],browOuterUpRight:[.2],eyeLookInRight:[.7],eyeLookOutLeft:[.7],eyeSquintLeft:[1],eyeSquintRight:[.8],eyesRotateY:[.7],mouthFrownLeft:[1],mouthFrownRight:[1],mouthLeft:[.2],mouthPucker:[.5],mouthRollLower:[.2],mouthRollUpper:[.2],mouthShrugLower:[.2],mouthShrugUpper:[.2],mouthStretchLeft:[.5]}},"😱":{dt:[500,1500],rescale:[0,1],vs:{browInnerUp:[.8],eyeWideLeft:[.5],eyeWideRight:[.5],jawOpen:[.7],mouthFunnel:[.5]}},"😬":{dt:[500,1500],rescale:[0,1],vs:{browDownLeft:[1],browDownRight:[1],browInnerUp:[1],mouthDimpleLeft:[.5],mouthDimpleRight:[.5],mouthLowerDownLeft:[1],mouthLowerDownRight:[1],mouthPressLeft:[.4],mouthPressRight:[.4],mouthPucker:[.5],mouthSmile:[.1],mouthSmileLeft:[.2],mouthSmileRight:[.2],mouthStretchLeft:[1],mouthStretchRight:[1],mouthUpperUpLeft:[1],mouthUpperUpRight:[1]}},"🙄":{dt:[500,1500],rescale:[0,1],vs:{browInnerUp:[.8],eyeWideLeft:[1],eyeWideRight:[1],eyesRotateX:[-.8],bodyRotateX:[.15],mouthPucker:[.5],mouthRollLower:[.6],mouthRollUpper:[.5],mouthShrugLower:[0],mouthSmile:[0]}},"🤔":{dt:[500,1500],rescale:[0,1],vs:{browDownLeft:[1],browOuterUpRight:[1],eyeSquintLeft:[.6],mouthFrownLeft:[.7],mouthFrownRight:[.7],mouthLowerDownLeft:[.3],mouthPressRight:[.4],mouthPucker:[.1],mouthRight:[.5],mouthRollLower:[.5],mouthRollUpper:[.2],handRight:[{x:.1,y:.1,z:.1,d:1e3},{d:1e3}],handFistRight:[.1]}},"👀":{dt:[500,1500],rescale:[0,1],vs:{eyesRotateY:[-.8]}},"😴":{dt:[5e3,5e3],rescale:[0,1],vs:{eyeBlinkLeft:[1],eyeBlinkRight:[1],bodyRotateX:[.2],bodyRotateZ:[.1]}},"✋":{dt:[300,2e3],rescale:[0,1],vs:{mouthSmile:[.5],gesture:[["handup",2,!0],null]}},"🤚":{dt:[300,2e3],rescale:[0,1],vs:{mouthSmile:[.5],gesture:[["handup",2],null]}},"👋":{link:"✋"},"👍":{dt:[300,2e3],rescale:[0,1],vs:{mouthSmile:[.5],gesture:[["thumbup",2],null]}},"👎":{dt:[300,2e3],rescale:[0,1],vs:{browDownLeft:[1],browDownRight:[1],eyesLookUp:[.2],jawForward:[.3],mouthFrownLeft:[1],mouthFrownRight:[1],bodyRotateX:[.15],gesture:[["thumbdown",2],null]}},"👌":{dt:[300,2e3],rescale:[0,1],vs:{mouthSmile:[.5],gesture:[["ok",2],null]}},"🤷‍♂️":{dt:[1e3,1500],rescale:[0,1],vs:{gesture:[["shrug",2],null]}},"🤷‍♀️":{link:"🤷‍♂️"},"🤷":{link:"🤷‍♂️"},"🙏":{dt:[1500,300,1e3],rescale:[0,1,0],vs:{eyeBlinkLeft:[0,1],eyeBlinkRight:[0,1],bodyRotateX:[0],bodyRotateZ:[.1],gesture:[["namaste",2],null]}},yes:{dt:[[200,500],[200,500],[200,500],[200,500]],vs:{headMove:[0],headRotateX:[[.1,.2],.1,[.1,.2],0],headRotateZ:[[-.2,.2]]}},no:{dt:[[200,500],[200,500],[200,500],[200,500],[200,500]],vs:{headMove:[0],headRotateY:[[-.1,-.05],[.05,.1],[-.1,-.05],[.05,.1],0],headRotateZ:[[-.2,.2]]}}},this.mtAvatar={},this.mtCustoms=["handFistLeft","handFistRight","bodyRotateX","bodyRotateY","bodyRotateZ","headRotateX","headRotateY","headRotateZ","chestInhale"],this.mtEasingDefault=this.sigmoidFactory(5),this.mtAccDefault=.01,this.mtAccExceptions={eyeBlinkLeft:.1,eyeBlinkRight:.1,eyeLookOutLeft:.1,eyeLookInLeft:.1,eyeLookOutRight:.1,eyeLookInRight:.1},this.mtMaxVDefault=5,this.mtMaxVExceptions={bodyRotateX:1,bodyRotateY:1,bodyRotateZ:1},this.mtBaselineDefault=0,this.mtBaselineExceptions={bodyRotateX:null,bodyRotateY:null,bodyRotateZ:null,eyeLookOutLeft:null,eyeLookInLeft:null,eyeLookOutRight:null,eyeLookInRight:null,eyesLookDown:null,eyesLookUp:null},this.mtMinDefault=0,this.mtMinExceptions={bodyRotateX:-1,bodyRotateY:-1,bodyRotateZ:-1,headRotateX:-1,headRotateY:-1,headRotateZ:-1},this.mtMaxDefault=1,this.mtMaxExceptions={},this.mtLimits={eyeBlinkLeft:t=>Math.max(t,(this.mtAvatar.eyesLookDown.value+this.mtAvatar.browDownLeft.value)/2),eyeBlinkRight:t=>Math.max(t,(this.mtAvatar.eyesLookDown.value+this.mtAvatar.browDownRight.value)/2)},this.mtOnchange={eyesLookDown:()=>{this.mtAvatar.eyeBlinkLeft.needsUpdate=!0,this.mtAvatar.eyeBlinkRight.needsUpdate=!0},browDownLeft:()=>{this.mtAvatar.eyeBlinkLeft.needsUpdate=!0},browDownRight:()=>{this.mtAvatar.eyeBlinkRight.needsUpdate=!0}},this.mtRandomized=["mouthDimpleLeft","mouthDimpleRight","mouthLeft","mouthPressLeft","mouthPressRight","mouthStretchLeft","mouthStretchRight","mouthShrugLower","mouthShrugUpper","noseSneerLeft","noseSneerRight","mouthRollLower","mouthRollUpper","browDownLeft","browDownRight","browOuterUpLeft","browOuterUpRight","cheekPuff","cheekSquintLeft","cheekSquintRight"],this.mtExtras=[{key:"mouthOpen",mix:{jawOpen:.5}},{key:"mouthSmile",mix:{mouthSmileLeft:.8,mouthSmileRight:.8}},{key:"eyesClosed",mix:{eyeBlinkLeft:1,eyeBlinkRight:1}},{key:"eyesLookUp",mix:{eyeLookUpLeft:1,eyeLookUpRight:1}},{key:"eyesLookDown",mix:{eyeLookDownLeft:1,eyeLookDownRight:1}}],this.animQueue=[],this.animClips=[],this.animPoses=[],this.animFrameDur=1e3/this.opt.modelFPS,this.animClock=0,this.animSlowdownRate=1,this.animTimeLast=0,this.easing=this.sigmoidFactory(5),this.lipsync={},this.opt.lipsyncModules.forEach((t=>this.lipsyncGetProcessor(t))),this.visemeNames=["aa","E","I","O","U","PP","SS","TH","DD","FF","kk","nn","RR","CH","sil"],this.initAudioGraph(),this.audioPlaylist=[],this.volumeFrequencyData=new Uint8Array(16),this.volumeMax=0,this.volumeHeadBase=0,this.volumeHeadTarget=0,this.volumeHeadCurrent=0,this.volumeHeadVelocity=.15,this.volumeHeadEasing=this.sigmoidFactory(3),this.isListening=!1,this.listeningAnalyzer=null,this.listeningActive=!1,this.listeningVolume=0,this.listeningSilenceThresholdLevel=this.opt.listeningSilenceThresholdLevel,this.listeningSilenceThresholdMs=this.opt.listeningSilenceThresholdMs,this.listeningSilenceDurationMax=this.opt.listeningSilenceDurationMax,this.listeningActiveThresholdLevel=this.opt.listeningActiveThresholdLevel,this.listeningActiveThresholdMs=this.opt.listeningActiveThresholdMs,this.listeningActiveDurationMax=this.opt.listeningActiveDurationMax,this.listeningTimer=0,this.listeningTimerTotal=0,this.dracoEnabled=this.opt.dracoEnabled,this.dracoDecoderPath=this.opt.dracoDecoderPath;const n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";this.b64Lookup="undefined"==typeof Uint8Array?[]:new Uint8Array(256);for(let t=0;t<64;t++)this.b64Lookup[n.charCodeAt(t)]=t;if(this.stateName="idle",this.speechQueue=[],this.isSpeaking=!1,this.isListening=!1,!this.opt.ttsEndpoint)throw new Error("You must provide some Google-compliant Text-To-Speech Endpoint.");{let t=new Audio;if(t.canPlayType("audio/ogg"))this.ttsAudioEncoding="OGG-OPUS";else{if(!t.canPlayType("audio/mp3"))throw new Error("There was no support for either OGG or MP3 audio.");this.ttsAudioEncoding="MP3"}}this.renderer=new t.WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setPixelRatio(this.opt.modelPixelRatio*window.devicePixelRatio),this.renderer.setSize(this.nodeAvatar.clientWidth,this.nodeAvatar.clientHeight),this.renderer.outputColorSpace=t.SRGBColorSpace,this.renderer.toneMapping=t.AgXToneMapping,this.renderer.toneMappingExposure=1,this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=t.PCFSoftShadowMap,this.nodeAvatar.appendChild(this.renderer.domElement),this.camera=new t.PerspectiveCamera(6,this.nodeAvatar.clientWidth/this.nodeAvatar.clientHeight,.1,1e3),this.scene=new t.Scene,this.scene.fog=new t.Fog(12632256,20,50),this.lightAmbient=new t.AmbientLight(16777215,.2),this.hemiLight=new t.HemisphereLight(16777215,4473924),this.hemiLight.position.set(0,20,0),this.lightDirect=new t.DirectionalLight(new t.Color(this.opt.lightDirectColor),this.opt.lightDirectIntensity),this.lightDirect.position.set(5,10,7.5),this.lightDirect.castShadow=!0,this.lightDirect.shadow.bias=-1e-4,this.lightDirect.shadow.mapSize.width=2048,this.lightDirect.shadow.mapSize.height=2048,this.lightSpot=new t.SpotLight(new t.Color(this.opt.lightSpotColor),this.opt.lightSpotIntensity,0,this.opt.lightSpotIntensity),this.setLighting(this.opt);const s=new t.PMREMGenerator(this.renderer);s.compileEquirectangularShader(),this.scene.environment=s.fromScene(new d).texture,this.resizeobserver=new ResizeObserver(this.onResize.bind(this)),this.resizeobserver.observe(this.nodeAvatar),this.controls=new e(this.camera,this.renderer.domElement),this.controls.enableZoom=this.opt.cameraZoomEnable,this.controls.enableRotate=this.opt.cameraRotateEnable,this.controls.enablePan=this.opt.cameraPanEnable,this.controls.minDistance=1,this.controls.maxDistance=1e3,this.controls.autoRotateSpeed=0,this.controls.autoRotate=!1,this.controls.update(),this.cameraClock=null,this.ikMesh=new t.SkinnedMesh;const r=[];Object.entries({LeftShoulder:null,LeftArm:"LeftShoulder",LeftForeArm:"LeftArm",LeftHand:"LeftForeArm",LeftHandMiddle1:"LeftHand",RightShoulder:null,RightArm:"RightShoulder",RightForeArm:"RightArm",RightHand:"RightForeArm",RightHandMiddle1:"RightHand"}).forEach(((e,i)=>{const o=new t.Bone;o.name=e[0],e[1]?this.ikMesh.getObjectByName(e[1]).add(o):this.ikMesh.add(o),r.push(o)})),this.ikMesh.bind(new t.Skeleton(r)),this.dynamicbones=new p,this.isStreaming=!1,this.streamWorkletNode=null,this.streamAudioStartTime=0,this.streamLipsyncLang=null,this.streamLipsyncType="visemes",this.streamLipsyncQueue=[]}initAudioGraph(t=null){this.audioCtx&&"closed"!==this.audioCtx.state&&this.audioCtx.close(),this.audioCtx=t?new AudioContext({sampleRate:t}):new AudioContext,this.audioSpeechSource=this.audioCtx.createBufferSource(),this.audioBackgroundSource=this.audioCtx.createBufferSource(),this.audioBackgroundGainNode=this.audioCtx.createGain(),this.audioSpeechGainNode=this.audioCtx.createGain(),this.audioStreamGainNode=this.audioCtx.createGain(),this.audioAnalyzerNode=this.audioCtx.createAnalyser(),this.audioAnalyzerNode.fftSize=256,this.audioAnalyzerNode.smoothingTimeConstant=.1,this.audioAnalyzerNode.minDecibels=-70,this.audioAnalyzerNode.maxDecibels=-10,this.audioReverbNode=this.audioCtx.createConvolver(),this.audioBackgroundGainNode.connect(this.audioReverbNode),this.audioAnalyzerNode.connect(this.audioSpeechGainNode),this.audioSpeechGainNode.connect(this.audioReverbNode),this.audioStreamGainNode.connect(this.audioReverbNode),this.audioReverbNode.connect(this.audioCtx.destination),this.setReverb(this.currentReverb||null),this.setMixerGain(this.opt.mixerGainSpeech,this.opt.mixerGainBackground),this.workletLoaded=!1}valueFn(t){return"function"==typeof t?t():t}deepCopy(t,e=null){const i=JSON.parse(JSON.stringify(t));return e&&"function"==typeof e&&e(i),i}b64ToArrayBuffer(t){let e=3*t.length/4;"="===t[t.length-1]&&(e--,"="===t[t.length-2]&&e--);const i=new ArrayBuffer(e),o=new Uint8Array(i);let a,n,s,r,h,l=0;for(a=0;a<t.length;a+=4)n=this.b64Lookup[t.charCodeAt(a)],s=this.b64Lookup[t.charCodeAt(a+1)],r=this.b64Lookup[t.charCodeAt(a+2)],h=this.b64Lookup[t.charCodeAt(a+3)],o[l++]=n<<2|s>>4,o[l++]=(15&s)<<4|r>>2,o[l++]=(3&r)<<6|63&h;return i}concatArrayBuffers(t){if(1===t.length)return t[0];let e=0;for(let i=0;i<t.length;i++)e+=t[i].byteLength;let i=new ArrayBuffer(e),o=new Uint8Array(i),a=0;for(let e=0;e<t.length;e++)o.set(new Uint8Array(t[e]),a),a+=t[e].byteLength;return i}pcmToAudioBuffer(t){const e=new Int16Array(t),i=new Float32Array(e.length);for(let t=0;t<e.length;t++)i[t]=e[t]>=32768?-(65536-e[t])/32768:e[t]/32767;const o=this.audioCtx.createBuffer(1,i.length,this.opt.pcmSampleRate);return o.copyToChannel(i,0,0),o}propsToThreeObjects(e){const i={};for(let[o,a]of Object.entries(e)){const e=o.split(".");let n=Array.isArray(a.x)?this.gaussianRandom(...a.x):a.x,s=Array.isArray(a.y)?this.gaussianRandom(...a.y):a.y,r=Array.isArray(a.z)?this.gaussianRandom(...a.z):a.z;"position"===e[1]||"scale"===e[1]?i[o]=new t.Vector3(n,s,r):"rotation"===e[1]?(o=e[0]+".quaternion",i[o]=(new t.Quaternion).setFromEuler(new t.Euler(n,s,r,"XYZ")).normalize()):"quaternion"===e[1]&&(i[o]=new t.Quaternion(n,s,r,a.w).normalize())}return i}clearThree(t){for(;t.children.length;)this.clearThree(t.children[0]),t.remove(t.children[0]);t.geometry&&t.geometry.dispose(),t.material&&(Object.keys(t.material).forEach((e=>{t.material[e]&&null!==t.material[e]&&"function"==typeof t.material[e].dispose&&t.material[e].dispose()})),t.material.dispose())}addMixedMorphTarget(e,i,o,a=!1){e.forEach((e=>{if(!a&&e.morphTargetDictionary.hasOwnProperty(i))return;const n=e.geometry;let s=null,r=null;for(const[i,a]of Object.entries(o))if(e.morphTargetDictionary.hasOwnProperty(i)){const o=e.morphTargetDictionary[i],h=n.morphAttributes.position[o],l=n.morphAttributes.normal?.[o];s||(s=new t.Float32BufferAttribute(3*h.count,3),l&&(r=new t.Float32BufferAttribute(3*h.count,3)));for(let t=0;t<h.count;t++){const e=s.getX(t)+h.getX(t)*a,i=s.getY(t)+h.getY(t)*a,o=s.getZ(t)+h.getZ(t)*a;s.setXYZ(t,e,i,o)}if(l)for(let t=0;t<h.count;t++){const e=r.getX(t)+l.getX(t)*a,i=r.getY(t)+l.getY(t)*a,o=r.getZ(t)+l.getZ(t)*a;r.setXYZ(t,e,i,o)}}if(s){n.morphAttributes.position.push(s),r&&n.morphAttributes.normal.push(r);const t=n.morphAttributes.position.length-1;e.morphTargetInfluences[t]=0,e.morphTargetDictionary[i]=t}}))}async parseAudioResponse(t){try{const e=this.b64ToArrayBuffer(t.audio);const i={audio:await this.audioCtx.decodeAudioData(e),words:[],wtimes:[],wdurations:[],markers:[],mtimes:[]};if(t.timepoints){t.timepoints.forEach((t=>{i.words.push(t.text),i.wtimes.push(1e3*t.start-250),i.wdurations.push(1e3*t.duration)}));const e=async()=>{this.lookAtCamera(500),this.speakWithHands()};t.timepoints.forEach((t=>{t.start>2&&t.text.length>4&&(i.markers.push(e),i.mtimes.push(1e3*t.start))}))}return t.events&&t.events.forEach((e=>{if("emoji"===e.type){if(e.mark_index<t.timepoints.length){const o=t.timepoints[e.mark_index];i.markers.push((async()=>{this.playGesture(e.name)})),i.mtimes.push(1e3*o.start)}}else if("mood"===e.type&&e.mark_index<t.timepoints.length){const o=t.timepoints[e.mark_index];i.markers.push((async()=>{this.lookAtCamera(500),this.setMood(e.name)})),i.mtimes.push(1e3*o.start)}})),i}catch(t){console.log(t)}return null}async showAvatar(e,a=null){if(!e||!e.hasOwnProperty("url"))throw new Error("Invalid parameter. The avatar must have at least 'url' specified.");const n=new i;if(this.dracoEnabled){const t=new o;t.setDecoderPath(this.dracoDecoderPath),n.setDRACOLoader(t)}let s=await n.loadAsync(e.url,a);const r=[this.opt.modelRoot];if(this.posePropNames.forEach((t=>r.push(t.split(".")[0]))),r.forEach((t=>{if(!s.scene.getObjectByName(t))throw new Error("Avatar object "+t+" not found")})),this.stop(),this.avatar=e,this.dynamicbones.dispose(),this.mixer=null,this.armature&&this.clearThree(this.scene),this.armature=s.scene.getObjectByName(this.opt.modelRoot),this.armature.scale.setScalar(1),this.morphs=[],this.armature.traverse((t=>{t.morphTargetInfluences&&t.morphTargetInfluences.length&&t.morphTargetDictionary&&this.morphs.push(t),t.frustumCulled=!1})),0===this.morphs.length)throw new Error("Blend shapes not found");const h=new Set(this.mtCustoms);this.morphs.forEach((t=>{Object.keys(t.morphTargetDictionary).forEach((t=>h.add(t)))})),this.mtExtras.forEach((t=>{h.has(t.key)||(this.addMixedMorphTarget(this.morphs,t.key,t.mix),h.add(t.key))}));const l={};if(h.forEach((t=>{l[t]={fixed:null,realtime:null,system:null,systemd:null,newvalue:null,ref:null,min:this.mtMinExceptions.hasOwnProperty(t)?this.mtMinExceptions[t]:this.mtMinDefault,max:this.mtMaxExceptions.hasOwnProperty(t)?this.mtMaxExceptions[t]:this.mtMaxDefault,easing:this.mtEasingDefault,base:null,v:0,needsUpdate:!0,acc:(this.mtAccExceptions.hasOwnProperty(t)?this.mtAccExceptions[t]:this.mtAccDefault)/1e3,maxv:(this.mtMaxVExceptions.hasOwnProperty(t)?this.mtMaxVExceptions[t]:this.mtMaxVDefault)/1e3,limit:this.mtLimits.hasOwnProperty(t)?this.mtLimits[t]:null,onchange:this.mtOnchange.hasOwnProperty(t)?this.mtOnchange[t]:null,baseline:this.avatar.baseline?.hasOwnProperty(t)?this.avatar.baseline[t]:this.mtBaselineExceptions.hasOwnProperty(t)?this.mtBaselineExceptions[t]:this.mtBaselineDefault,ms:[],is:[]},l[t].value=l[t].baseline,l[t].applied=l[t].baseline;const e=this.mtAvatar[t];e&&["fixed","system","systemd","base","v","value","applied"].forEach((i=>{l[t][i]=e[i]})),this.morphs.forEach((e=>{const i=e.morphTargetDictionary[t];void 0!==i&&(l[t].ms.push(e.morphTargetInfluences),l[t].is.push(i),e.morphTargetInfluences[i]=l[t].applied)}))})),this.mtAvatar=l,this.poseAvatar={props:{}},this.posePropNames.forEach((t=>{const e=t.split("."),i=this.armature.getObjectByName(e[0]);this.poseAvatar.props[t]=i[e[1]],this.poseBase.props.hasOwnProperty(t)?this.poseAvatar.props[t].copy(this.poseBase.props[t]):this.poseBase.props[t]=this.poseAvatar.props[t].clone(),this.poseDelta.props.hasOwnProperty(t)&&!this.poseTarget.props.hasOwnProperty(t)&&(this.poseTarget.props[t]=this.poseAvatar.props[t].clone()),this.poseTarget.props[t].t=this.animClock,this.poseTarget.props[t].d=2e3})),this.ikMesh.traverse((t=>{t.isBone&&t.position.copy(this.armature.getObjectByName(t.name).position)})),s.scene.traverse((t=>{t.isMesh&&(t.castShadow=!0,t.receiveShadow=!0)})),this.scene.add(s.scene),this.scene.add(this.lightAmbient),this.scene.add(this.hemiLight),this.scene.add(this.lightDirect),this.scene.add(this.lightSpot),this.lightSpot.target=this.armature.getObjectByName("Head"),e.hasOwnProperty("modelDynamicBones"))try{this.dynamicbones.setup(this.scene,this.armature,e.modelDynamicBones)}catch(t){console.error("Dynamic bones setup failed: "+t)}this.objectLeftToeBase=this.armature.getObjectByName("LeftToeBase"),this.objectRightToeBase=this.armature.getObjectByName("RightToeBase"),this.objectLeftEye=this.armature.getObjectByName("LeftEye"),this.objectRightEye=this.armature.getObjectByName("RightEye"),this.objectLeftArm=this.armature.getObjectByName("LeftArm"),this.objectRightArm=this.armature.getObjectByName("RightArm"),this.objectHips=this.armature.getObjectByName("Hips"),this.objectHead=this.armature.getObjectByName("Head"),this.objectNeck=this.armature.getObjectByName("Neck");const d=new t.Vector3;this.objectLeftEye.getWorldPosition(d),this.avatarHeight=d.y+.2,this.viewName||this.setView(this.opt.cameraView),this.setMood(this.avatar.avatarMood||this.moodName||this.opt.avatarMood),this.start()}getViewNames(){return["full","mid","upper","head"]}getView(){return this.viewName}setView(e,i=null){if("full"!==(e=e||this.viewName)&&"upper"!==e&&"head"!==e&&"mid"!==e)return;if(!this.armature)return void(this.opt.cameraView=e);this.viewName=e||this.viewName;const o=(i=i||{}).hasOwnProperty("cameraX")?i.cameraX:this.opt.cameraX,a=i.hasOwnProperty("cameraY")?i.cameraY:this.opt.cameraY,n=i.hasOwnProperty("cameraDistance")?i.cameraDistance:this.opt.cameraDistance,s=i.hasOwnProperty("cameraRotateX")?i.cameraRotateX:this.opt.cameraRotateX,r=i.hasOwnProperty("cameraRotateY")?i.cameraRotateY:this.opt.cameraRotateY,h=this.camera.fov*(Math.PI/180);let l=-o*Math.tan(h/2),d=(1-a)*Math.tan(h/2),m=n;switch(this.viewName){case"head":m+=2,d=d*m+4*this.avatarHeight/5;break;case"upper":m+=4.5,d=d*m+2*this.avatarHeight/3;break;case"mid":m+=8,d=d*m+this.avatarHeight/3;break;default:m+=10,d=d*m+.9}l*=m,this.controlsEnd=new t.Vector3(l,d,0),this.cameraEnd=new t.Vector3(l,d,m).applyEuler(new t.Euler(s,r,0)),null===this.cameraClock&&(this.controls.target.copy(this.controlsEnd),this.camera.position.copy(this.cameraEnd)),this.controlsStart=this.controls.target.clone(),this.cameraStart=this.camera.position.clone(),this.cameraClock=0}setLighting(e){(e=e||{}).hasOwnProperty("lightAmbientColor")&&this.lightAmbient.color.set(new t.Color(e.lightAmbientColor)),e.hasOwnProperty("lightAmbientIntensity")&&(this.lightAmbient.intensity=e.lightAmbientIntensity,this.lightAmbient.visible=0!==e.lightAmbientIntensity),e.hasOwnProperty("lightDirectColor")&&this.lightDirect.color.set(new t.Color(e.lightDirectColor)),e.hasOwnProperty("lightDirectIntensity")&&(this.lightDirect.intensity=e.lightDirectIntensity,this.lightDirect.visible=0!==e.lightDirectIntensity),e.hasOwnProperty("lightDirectPhi")&&e.hasOwnProperty("lightDirectTheta")&&this.lightDirect.position.setFromSphericalCoords(2,e.lightDirectPhi,e.lightDirectTheta),e.hasOwnProperty("lightSpotColor")&&this.lightSpot.color.set(new t.Color(e.lightSpotColor)),e.hasOwnProperty("lightSpotIntensity")&&(this.lightSpot.intensity=e.lightSpotIntensity,this.lightSpot.visible=0!==e.lightSpotIntensity),e.hasOwnProperty("lightSpotPhi")&&e.hasOwnProperty("lightSpotTheta")&&(this.lightSpot.position.setFromSphericalCoords(2,e.lightSpotPhi,e.lightSpotTheta),this.lightSpot.position.add(new t.Vector3(0,1.5,0))),e.hasOwnProperty("lightSpotDispersion")&&(this.lightSpot.angle=e.lightSpotDispersion)}render(){this.isRunning&&(this.composer?this.composer.render():this.renderer.render(this.scene,this.camera))}onResize(){this.camera.aspect=this.nodeAvatar.clientWidth/this.nodeAvatar.clientHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.nodeAvatar.clientWidth,this.nodeAvatar.clientHeight),this.controls.update(),this.render()}updatePoseBase(t){for(const[e,i]of Object.entries(this.poseTarget.props)){const o=this.poseAvatar.props[e];if(o){let a=(t-i.t)/i.d;a>1||!this.poseBase.props.hasOwnProperty(e)?o.copy(i):o.isQuaternion?o.copy(this.poseBase.props[e].slerp(i,this.easing(a))):o.isVector3&&o.copy(this.poseBase.props[e].lerp(i,this.easing(a)))}}}updatePoseDelta(){for(const[t,e]of Object.entries(this.poseDelta.props)){if(0===e.x&&0===e.y&&0===e.z)continue;c.set(e.x,e.y,e.z);const i=this.poseAvatar.props[t];i.isQuaternion?(g.setFromEuler(c),i.multiply(g)):i.isVector3&&i.add(c)}}updateMorphTargets(t){for(let[e,i]of Object.entries(this.mtAvatar)){if(!i.needsUpdate)continue;let o=null,a=null;if(null!==i.fixed){if(o=i.fixed,i.system=null,i.systemd=null,i.newvalue=null,i.ref&&i.ref.hasOwnProperty(e)&&delete i.ref[e],i.ref=null,i.base=null,i.value===o){i.needsUpdate=!1;continue}}else null!==i.realtime?(i.ref=null,i.base=null,a=i.realtime):null!==i.system?(o=i.system,i.newvalue=null,i.ref&&i.ref.hasOwnProperty(e)&&delete i.ref[e],i.ref=null,i.base=null,null!==i.systemd?0===i.systemd?(o=null,i.system=null,i.systemd=null):(i.systemd-=t,i.systemd<0&&(i.systemd=0),i.value===o&&(o=null)):i.value===o&&(o=null,i.system=null)):null!==i.newvalue?(i.ref=null,i.base=null,a=i.newvalue,i.newvalue=null):null!==i.base?(o=i.base,i.ref=null,i.value===o&&(o=null,i.base=null,i.needsUpdate=!1)):(i.ref=null,null!==i.baseline&&i.value!==i.baseline?(o=i.baseline,i.base=i.baseline):i.needsUpdate=!1);if(null!==o){let e=o-i.value;e>=0?e<.005?(a=o,i.v=0):(i.v<i.maxv&&(i.v+=i.acc*t),a=i.v>=0?i.value+e*(1-Math.exp(-i.v*t)):i.value+i.v*t*(1-Math.exp(i.v*t))):e>-.005?(a=o,i.v=0):(i.v>-i.maxv&&(i.v-=i.acc*t),a=i.v>=0?i.value+i.v*t*(1-Math.exp(-i.v*t)):i.value+e*(1-Math.exp(i.v*t)))}if(null!==i.limit){if(null!==a&&a!==i.value&&(i.value=a,null!==i.onchange&&i.onchange(a)),a=i.limit(i.value),a===i.applied)continue}else{if(null===a||a===i.value)continue;i.value=a,null!==i.onchange&&i.onchange(a)}switch(i.applied=a,i.applied<i.min&&(i.applied=i.min),i.applied>i.max&&(i.applied=i.max),e){case"headRotateX":this.poseDelta.props["Head.quaternion"].x=i.applied+this.mtAvatar.bodyRotateX.applied;break;case"headRotateY":this.poseDelta.props["Head.quaternion"].y=i.applied+this.mtAvatar.bodyRotateY.applied;break;case"headRotateZ":this.poseDelta.props["Head.quaternion"].z=i.applied+this.mtAvatar.bodyRotateZ.applied;break;case"bodyRotateX":this.poseDelta.props["Head.quaternion"].x=i.applied+this.mtAvatar.headRotateX.applied,this.poseDelta.props["Spine1.quaternion"].x=i.applied/2,this.poseDelta.props["Spine.quaternion"].x=i.applied/8,this.poseDelta.props["Hips.quaternion"].x=i.applied/24;break;case"bodyRotateY":this.poseDelta.props["Head.quaternion"].y=i.applied+this.mtAvatar.headRotateY.applied,this.poseDelta.props["Spine1.quaternion"].y=i.applied/2,this.poseDelta.props["Spine.quaternion"].y=i.applied/2,this.poseDelta.props["Hips.quaternion"].y=i.applied/4,this.poseDelta.props["LeftUpLeg.quaternion"].y=i.applied/2,this.poseDelta.props["RightUpLeg.quaternion"].y=i.applied/2,this.poseDelta.props["LeftLeg.quaternion"].y=i.applied/4,this.poseDelta.props["RightLeg.quaternion"].y=i.applied/4;break;case"bodyRotateZ":this.poseDelta.props["Head.quaternion"].z=i.applied+this.mtAvatar.headRotateZ.applied,this.poseDelta.props["Spine1.quaternion"].z=i.applied/12,this.poseDelta.props["Spine.quaternion"].z=i.applied/12,this.poseDelta.props["Hips.quaternion"].z=i.applied/24;break;case"handFistLeft":case"handFistRight":const t=e.substring(8);["HandThumb","HandIndex","HandMiddle","HandRing","HandPinky"].forEach(((e,o)=>{0===o?(this.poseDelta.props[t+e+"1.quaternion"].x=0,this.poseDelta.props[t+e+"2.quaternion"].z=("Left"===t?-1:1)*i.applied,this.poseDelta.props[t+e+"3.quaternion"].z=("Left"===t?-1:1)*i.applied):(this.poseDelta.props[t+e+"1.quaternion"].x=i.applied,this.poseDelta.props[t+e+"2.quaternion"].x=1.5*i.applied,this.poseDelta.props[t+e+"3.quaternion"].x=1.5*i.applied)}));break;case"chestInhale":const o=i.applied/20,a={x:o,y:o/2,z:3*o},n={x:1/(1+o)-1,y:1/(1+o/2)-1,z:1/(1+3*o)-1};this.poseDelta.props["Spine1.scale"]=a,this.poseDelta.props["Neck.scale"]=n,this.poseDelta.props["LeftArm.scale"]=n,this.poseDelta.props["RightArm.scale"]=n;break;default:for(let t=0,e=i.ms.length;t<e;t++)i.ms[t][i.is[t]]=i.applied}}}getPoseString(e,i=1e3){let o="{";return Object.entries(e).forEach(((e,a)=>{const n=e[0].split(".");if("position"===n[1]||"rotation"===n[1]||"quaternion"===n[1]){const s="quaternion"===n[1]?n[0]+".rotation":e[0],r=e[1].isQuaternion?(new t.Euler).setFromQuaternion(e[1]):e[1];o+=(a?", ":"")+"'"+s+"':{",o+="x:"+Math.round(r.x*i)/i,o+=", y:"+Math.round(r.y*i)/i,o+=", z:"+Math.round(r.z*i)/i,o+="}"}})),o+="}",o}getPoseTemplateProp(t){const e=t.split(".");let i=e[0]+"."+("rotation"===e[1]?"quaternion":e[1]);if(this.gesture&&this.gesture.hasOwnProperty(i))return this.gesture[i].clone();{let t,o=e[0]+"."+("quaternion"===e[1]?"rotation":e[1]);if(this.poseWeightOnLeft||(o.startsWith("Left")?(o="Right"+o.substring(4),i="Right"+i.substring(4)):o.startsWith("Right")&&(o="Left"+o.substring(5),i="Left"+i.substring(5))),this.poseTarget.template.props.hasOwnProperty(i)){const e={};e[i]=this.poseTarget.template.props[i],t=this.propsToThreeObjects(e)[i]}else if(this.poseTarget.template.props.hasOwnProperty(o)){const e={};e[o]=this.poseTarget.template.props[o],t=this.propsToThreeObjects(e)[i]}return t&&!this.poseWeightOnLeft&&t.isQuaternion&&(t.x*=-1,t.w*=-1),t}}mirrorPose(t){const e={};for(let[i,o]of Object.entries(t))o.isQuaternion&&(i.startsWith("Left")?i="Right"+i.substring(4):i.startsWith("Right")&&(i="Left"+i.substring(5)),o.x*=-1,o.w*=-1),e[i]=o.clone(),e[i].t=o.t,e[i].d=o.d;return e}poseFactory(t,e=2e3){const i={template:t,props:this.propsToThreeObjects(t.props)};for(const[o,a]of Object.entries(i.props)){if(this.opt.modelMovementFactor<1&&t.standing&&("Hips.quaternion"===o||"Spine.quaternion"===o||"Spine1.quaternion"===o||"Spine2.quaternion"===o||"Neck.quaternion"===o||"LeftUpLeg.quaternion"===o||"LeftLeg.quaternion"===o||"RightUpLeg.quaternion"===o||"RightLeg.quaternion"===o)){const t=this.poseStraight[o],e=a.angleTo(t);a.rotateTowards(t,(1-this.opt.modelMovementFactor)*e)}a.t=this.animClock,a.d=e}return i}setPoseFromTemplate(t,e=2e3){const i=t&&this.poseTarget&&this.poseTarget.template&&(this.poseTarget.template.standing&&t.lying||this.poseTarget.template.lying&&t.standing),o=t&&t===this.poseCurrentTemplate,a=this.poseWeightOnLeft;let n=i?1e3:e;if(i?(this.poseCurrentTemplate=this.poseTemplates.oneknee,setTimeout((()=>{this.setPoseFromTemplate(t,e)}),n)):this.poseCurrentTemplate=t||this.poseCurrentTemplate,this.poseTarget=this.poseFactory(this.poseCurrentTemplate,n),this.poseWeightOnLeft=!0,(!o&&!a||o&&a)&&(this.poseTarget.props=this.mirrorPose(this.poseTarget.props),this.poseWeightOnLeft=!this.poseWeightOnLeft),this.gesture)for(let[t,e]of Object.entries(this.gesture))this.poseTarget.props.hasOwnProperty(t)&&(this.poseTarget.props[t].copy(e),this.poseTarget.props[t].t=e.t,this.poseTarget.props[t].d=e.d);Object.keys(this.poseDelta.props).forEach((t=>{this.poseTarget.props.hasOwnProperty(t)||(this.poseTarget.props[t]=this.poseBase.props[t].clone(),this.poseTarget.props[t].t=this.animClock,this.poseTarget.props[t].d=n)}))}getValue(t){return this.mtAvatar[t]?.value}setValue(t,e,i=null){this.mtAvatar.hasOwnProperty(t)&&Object.assign(this.mtAvatar[t],{system:e,systemd:i,needsUpdate:!0})}getMoodNames(){return Object.keys(this.animMoods)}getMood(){return this.opt.avatarMood}setMood(t){if(t=(t||"").trim().toLowerCase(),!this.animMoods.hasOwnProperty(t))throw new Error("Unknown mood.");this.moodName=t,this.mood=this.animMoods[this.moodName];for(let t of Object.keys(this.mtAvatar)){let e=this.mtBaselineExceptions.hasOwnProperty(t)?this.mtBaselineExceptions[t]:this.mtBaselineDefault;this.mood.baseline.hasOwnProperty(t)?e=this.mood.baseline[t]:this.avatar.baseline?.hasOwnProperty(t)&&(e=this.avatar.baseline[t]),this.setBaselineValue(t,e)}this.mood.anims.forEach((t=>{let e=this.animQueue.findIndex((e=>e.template.name===t.name));-1!==e&&this.animQueue.splice(e,1),this.animQueue.push(this.animFactory(t,-1))}))}getMorphTargetNames(){return["eyesRotateX","eyesRotateY",...Object.keys(this.mtAvatar)].sort()}getBaselineValue(t){if("eyesRotateY"===t){const t=this.getBaselineValue("eyeLookOutLeft");if(void 0===t)return;const e=this.getBaselineValue("eyeLookInLeft");if(void 0===e)return;if(void 0===this.getBaselineValue("eyeLookOutRight"))return;if(void 0===this.getBaselineValue("eyeLookInRight"))return;return t-e}if("eyesRotateX"===t){const t=this.getBaselineValue("eyesLookDown");if(void 0===t)return;const e=this.getBaselineValue("eyesLookUp");if(void 0===e)return;return t-e}return this.mtAvatar[t]?.baseline}setBaselineValue(t,e){"eyesRotateY"===t?(this.setBaselineValue("eyeLookOutLeft",null===e?null:e>0?e:0),this.setBaselineValue("eyeLookInLeft",null===e?null:e>0?0:-e),this.setBaselineValue("eyeLookOutRight",null===e?null:e>0?0:-e),this.setBaselineValue("eyeLookInRight",null===e?null:e>0?e:0)):"eyesRotateX"===t?(this.setBaselineValue("eyesLookDown",null===e?null:e>0?e:0),this.setBaselineValue("eyesLookUp",null===e?null:e>0?0:-e)):this.mtAvatar.hasOwnProperty(t)&&Object.assign(this.mtAvatar[t],{base:null,baseline:e,needsUpdate:!0})}getFixedValue(t){if("eyesRotateY"===t){const t=this.getFixedValue("eyeLookOutLeft");if(null===t)return null;const e=this.getFixedValue("eyeLookInLeft");if(null===e)return null;if(null===this.getFixedValue("eyeLookOutRight"))return null;return null===this.getFixedValue("eyeLookInRight")?null:t-e}if("eyesRotateX"===t){const t=this.getFixedValue("eyesLookDown");if(null===t)return null;const e=this.getFixedValue("eyesLookUp");return null===e?null:t-e}return this.mtAvatar[t]?.fixed}setFixedValue(t,e,i=null){"eyesRotateY"===t?(this.setFixedValue("eyeLookOutLeft",null===e?null:e>0?e:0,i),this.setFixedValue("eyeLookInLeft",null===e?null:e>0?0:-e,i),this.setFixedValue("eyeLookOutRight",null===e?null:e>0?0:-e,i),this.setFixedValue("eyeLookInRight",null===e?null:e>0?e:0,i)):"eyesRotateX"===t?(this.setFixedValue("eyesLookDown",null===e?null:e>0?e:0,i),this.setFixedValue("eyesLookUp",null===e?null:e>0?0:-e,i)):this.mtAvatar.hasOwnProperty(t)&&Object.assign(this.mtAvatar[t],{fixed:e,needsUpdate:!0})}animFactory(t,e=!1,i=1,o=1,a=!1){const n={template:t,ts:[0],vs:{}};let s=t;for(;;)if(s.hasOwnProperty(this.stateName))s=s[this.stateName];else if(s.hasOwnProperty(this.moodName))s=s[this.moodName];else if(s.hasOwnProperty(this.poseName))s=s[this.poseName];else if(s.hasOwnProperty(this.viewName))s=s[this.viewName];else if(this.avatar.body&&s.hasOwnProperty(this.avatar.body))s=s[this.avatar.body];else{if(!s.hasOwnProperty("alt"))break;{let t=s.alt[0];if(s.alt.length>1){const e=Math.random();let i=0;for(let o=0;o<s.alt.length;o++){let a=this.valueFn(s.alt[o].p);if(i+=void 0===a?(1-i)/(s.alt.length-1-o):a,e<i){t=s.alt[o];break}}}s=t}}let r=this.valueFn(s.delay)||0;if(Array.isArray(r)&&(r=this.gaussianRandom(...r)),s.hasOwnProperty("dt"))s.dt.forEach(((t,e)=>{let i=this.valueFn(t);Array.isArray(i)&&(i=this.gaussianRandom(...i)),n.ts[e+1]=n.ts[e]+i}));else{let t=Object.values(s.vs).reduce(((t,e)=>e.length>t?e.length:t),0);n.ts=Array(t+1).fill(0)}n.ts=a?n.ts.map((t=>r+t*i)):n.ts.map((t=>this.animClock+r+t*i));for(let[t,e]of Object.entries(s.vs)){const i=this.getBaselineValue(t),a=e.map((e=>null===(e=this.valueFn(e))?null:"function"==typeof e?e:"string"==typeof e||e instanceof String?e.slice():Array.isArray(e)?"gesture"===t?e.slice():(void 0===i?0:i)+o*this.gaussianRandom(...e):"boolean"==typeof e?e:e instanceof Object&&e.constructor===Object?Object.assign({},e):(void 0===i?0:i)+o*e));"eyesRotateY"===t?(n.vs.eyeLookOutLeft=[null,...a.map((t=>t>0?t:0))],n.vs.eyeLookInLeft=[null,...a.map((t=>t>0?0:-t))],n.vs.eyeLookOutRight=[null,...a.map((t=>t>0?0:-t))],n.vs.eyeLookInRight=[null,...a.map((t=>t>0?t:0))]):"eyesRotateX"===t?(n.vs.eyesLookDown=[null,...a.map((t=>t>0?t:0))],n.vs.eyesLookUp=[null,...a.map((t=>t>0?0:-t))]):n.vs[t]=[null,...a]}for(let t of Object.keys(n.vs))for(;n.vs[t].length<=n.ts.length;)n.vs[t].push(n.vs[t][n.vs[t].length-1]);return t.hasOwnProperty("mood")&&(n.mood=this.valueFn(t.mood).slice()),e&&(n.loop=e),n}valueAnimationSeq(t,e,i,o,a,n=null){t=this.valueFn(t),a<i&&(a=i),a>o&&(a=o);let s=((e=this.valueFn(e))-t)/(o-i);return n&&(s*=n((a-i)/(o-i))),s*a+(t-s*i)}gaussianRandom(t,e,i=1,o=5){let a=0;for(let t=0;t<o;t++)a+=Math.random();return t+Math.pow(a/o,i)*(e-t)}sigmoidFactory(t){function e(e){return 1/(1+Math.exp(-t*e))-.5}var i=.5/e(1);return function(t){return i*e(2*Math.max(Math.min(t,1),0)-1)+.5}}convertRange(t,e,i){return(t-e[0])*(i[1]-i[0])/(e[1]-e[0])+i[0]}animate(e){if(!this.isRunning)return;requestAnimationFrame(this.animate.bind(this));let i=e-this.animTimeLast;if(i<this.animFrameDur)return;i/=this.animSlowdownRate,this.animClock+=i,this.animTimeLast=e;let o,a,n,s,r=0;if(this.stats&&this.stats.begin(),this.isListening){for(this.listeningAnalyzer.getByteFrequencyData(this.volumeFrequencyData),o=2,n=10;o<n;o++)this.volumeFrequencyData[o]>r&&(r=this.volumeFrequencyData[o]);this.listeningVolume=(this.listeningVolume+r)/2,this.listeningActive?(this.listeningTimerTotal+=i,this.listeningVolume<this.listeningSilenceThresholdLevel?(this.listeningTimer+=i,this.listeningTimer>this.listeningSilenceThresholdMs&&(this.listeningOnchange&&this.listeningOnchange("stop",this.listeningTimer),this.listeningActive=!1,this.listeningTimer=0,this.listeningTimerTotal=0)):this.listeningTimer*=.5,this.listeningTimerTotal>this.listeningActiveDurationMax&&(this.listeningOnchange&&this.listeningOnchange("maxactive"),this.listeningTimerTotal=0)):(this.listeningTimerTotal+=i,this.listeningVolume>this.listeningActiveThresholdLevel?(this.listeningTimer+=i,this.listeningTimer>this.listeningActiveThresholdMs&&(this.listeningOnchange&&this.listeningOnchange("start"),this.listeningActive=!0,this.listeningTimer=0,this.listeningTimerTotal=0)):this.listeningTimer*=.5,this.listeningTimerTotal>this.listeningSilenceDurationMax&&(this.listeningOnchange&&this.listeningOnchange("maxsilence"),this.listeningTimerTotal=0))}if(this.isSpeaking)for(r=0,this.audioAnalyzerNode.getByteFrequencyData(this.volumeFrequencyData),o=2,n=10;o<n;o++)this.volumeFrequencyData[o]>r&&(r=this.volumeFrequencyData[o]);let h=null,l=null;const d=[];for(o=0,n=this.animQueue.length;o<n;o++){const t=this.animQueue[o];if(!(this.animClock<t.ts[0])){for(a=t.ndx||0,s=t.ts.length;a<s&&!(this.animClock<t.ts[a]);a++)for(let[e,i]of Object.entries(t.vs))if(this.mtAvatar.hasOwnProperty(e)){if(null===i[a+1])continue;const o=this.mtAvatar[e];if(null===i[a]&&(i[a]=o.value),a===s-1)o.newvalue=i[a];else{o.newvalue=i[a+1];const n=t.ts[a+1]-t.ts[a];let s=1;n>1e-4&&(s=(this.animClock-t.ts[a])/n),s<1&&(o.easing&&(s=o.easing(s)),o.newvalue=(1-s)*i[a]+s*o.newvalue),o.ref&&o.ref!==t.vs&&o.ref.hasOwnProperty(e)&&delete o.ref[e],o.ref=t.vs}if(r)switch(e){case"viseme_aa":case"viseme_E":case"viseme_I":case"viseme_O":case"viseme_U":o.newvalue*=1+r/255-.5}o.needsUpdate=!0}else"eyeContact"===e&&null!==i[a]&&!1!==h?h=Boolean(i[a]):"headMove"===e&&null!==i[a]&&!1!==l?0===i[a]?l=!1:(Math.random()<i[a]&&(l=!0),i[a]=null):null!==i[a]&&(d.push({mt:e,val:i[a]}),i[a]=null);a===s?(t.hasOwnProperty("mood")&&this.setMood(t.mood),t.loop?(s=!this.isSpeaking||"head"!==t.template.name&&"eyes"!==t.template.name?1:4,this.animQueue[o]=this.animFactory(t.template,t.loop>0?t.loop-1:t.loop,1,1/s)):(this.animQueue.splice(o--,1),n--)):t.ndx=a-1}}for(let e=0,i=d.length;e<i;e++)switch(a=d[e].val,d[e].mt){case"speak":this.speakText(a);break;case"subtitles":this.onSubtitles&&"function"==typeof this.onSubtitles&&this.onSubtitles(a);break;case"pose":this.poseName=a,this.setPoseFromTemplate(this.poseTemplates[this.poseName]);break;case"gesture":this.playGesture(...a);break;case"function":a&&"function"==typeof a&&a();break;case"moveto":Object.entries(a.props).forEach((t=>{t[1]?this.poseTarget.props[t[0]].copy(t[1]):this.poseTarget.props[t[0]].copy(this.getPoseTemplateProp(t[0])),this.poseTarget.props[t[0]].t=this.animClock,this.poseTarget.props[t[0]].d=t[1]&&t[1].d?t[1].d:t.duration||2e3}));break;case"handLeft":this.ikSolve({iterations:20,root:"LeftShoulder",effector:"LeftHandMiddle1",links:[{link:"LeftHand",minx:-.5,maxx:.5,miny:-1,maxy:1,minz:-.5,maxz:.5},{link:"LeftForeArm",minx:-.5,maxx:1.5,miny:-1.5,maxy:1.5,minz:-.5,maxz:3},{link:"LeftArm",minx:-1.5,maxx:1.5,miny:0,maxy:0,minz:-1,maxz:3}]},a.x?new t.Vector3(a.x,a.y,a.z):null,!0,a.d);break;case"handRight":this.ikSolve({iterations:20,root:"RightShoulder",effector:"RightHandMiddle1",links:[{link:"RightHand",minx:-.5,maxx:.5,miny:-1,maxy:1,minz:-.5,maxz:.5,maxAngle:.1},{link:"RightForeArm",minx:-.5,maxx:1.5,miny:-1.5,maxy:1.5,minz:-3,maxz:.5,maxAngle:.2},{link:"RightArm",minx:-1.5,maxx:1.5,miny:0,maxy:0,minz:-1,maxz:3}]},a.x?new t.Vector3(a.x,a.y,a.z):null,!0,a.d)}if((h||l)&&(c.setFromQuaternion(this.poseAvatar.props["Head.quaternion"]),c.x=Math.max(-.9,Math.min(.9,2*c.x-.5)),c.y=Math.max(-.9,Math.min(.9,-2.5*c.y)),h?(Object.assign(this.mtAvatar.eyesLookDown,{system:c.x<0?-c.x:0,needsUpdate:!0}),Object.assign(this.mtAvatar.eyesLookUp,{system:c.x<0?0:c.x,needsUpdate:!0}),Object.assign(this.mtAvatar.eyeLookInLeft,{system:c.y<0?-c.y:0,needsUpdate:!0}),Object.assign(this.mtAvatar.eyeLookOutLeft,{system:c.y<0?0:c.y,needsUpdate:!0}),Object.assign(this.mtAvatar.eyeLookInRight,{system:c.y<0?0:c.y,needsUpdate:!0}),Object.assign(this.mtAvatar.eyeLookOutRight,{system:c.y<0?-c.y:0,needsUpdate:!0}),l&&(o=-this.mtAvatar.bodyRotateY.value,a=this.gaussianRandom(-.2,.2),this.animQueue.push(this.animFactory({name:"headmove",dt:[[1e3,2e3],[1e3,2e3,1,2],[1e3,2e3],[1e3,2e3,1,2]],vs:{headRotateY:[o,o,0],headRotateX:[a,a,0],headRotateZ:[-o/4,-o/4,0]}})))):(o=this.mtAvatar.eyeLookInLeft.value-this.mtAvatar.eyeLookOutLeft.value,a=this.gaussianRandom(-.2,.2),this.animQueue.push(this.animFactory({name:"headmove",dt:[[1e3,2e3],[1e3,2e3,1,2],[1e3,2e3],[1e3,2e3,1,2]],vs:{headRotateY:[null,o,o,0],headRotateX:[null,a,a,0],headRotateZ:[null,-o/4,-o/4,0],eyeLookInLeft:[null,0],eyeLookOutLeft:[null,0],eyeLookInRight:[null,0],eyeLookOutRight:[null,0],eyeContact:[0]}})))),i>2*this.animFrameDur&&(i=2*this.animFrameDur),"full"!==this.viewName&&(o=this.mtRandomized[Math.floor(Math.random()*this.mtRandomized.length)],a=this.mtAvatar[o],a.needsUpdate||Object.assign(a,{base:(this.mood.baseline[o]||0)+(1+r/255)*Math.random()/5,needsUpdate:!0})),this.updatePoseBase(this.animClock),this.mixer&&this.mixer.update(i/1e3*this.mixer.timeScale),this.updatePoseDelta(),(this.isSpeaking||this.isListening)&&h?r>this.volumeMax?(this.volumeHeadBase=.05,Math.random()>.6&&(this.volumeHeadTarget=-.05-Math.random()/15),this.volumeMax=r):(this.volumeMax*=.92,this.volumeHeadTarget=this.volumeHeadBase-.9*(this.volumeHeadBase-this.volumeHeadTarget)):(this.volumeHeadTarget=0,this.volumeMax=0),o=this.volumeHeadTarget-this.volumeHeadCurrent,a=Math.abs(o),a>1e-4&&(s=a*(this.volumeHeadEasing(Math.min(1,this.volumeHeadVelocity*i/1e3/a)/2+.5)-.5),this.volumeHeadCurrent+=Math.sign(o)*Math.min(a,s)),Math.abs(this.volumeHeadCurrent)>1e-4&&(g.setFromAxisAngle(R,this.volumeHeadCurrent),this.objectNeck.quaternion.multiply(g)),L.setFromObject(this.armature),this.objectLeftToeBase.getWorldPosition(x),this.objectRightToeBase.getWorldPosition(f),this.objectHips.position.y-=L.min.y/2,this.objectHips.position.x-=(x.x+f.x)/4,this.objectHips.position.z-=(x.z+f.z)/2,this.dynamicbones.update(i),this.opt.update&&this.opt.update(i),this.updateMorphTargets(i),null!==this.cameraClock&&this.cameraClock<1e3){this.cameraClock+=i,this.cameraClock>1e3&&(this.cameraClock=1e3);let e=(new t.Spherical).setFromVector3(this.cameraStart),o=(new t.Spherical).setFromVector3(this.cameraEnd);e.phi+=this.easing(this.cameraClock/1e3)*(o.phi-e.phi),e.theta+=this.easing(this.cameraClock/1e3)*(o.theta-e.theta),e.radius+=this.easing(this.cameraClock/1e3)*(o.radius-e.radius),e.makeSafe(),this.camera.position.setFromSpherical(e),this.controlsStart.x!==this.controlsEnd.x?this.controls.target.copy(this.controlsStart.lerp(this.controlsEnd,this.easing(this.cameraClock/1e3))):(e.setFromVector3(this.controlsStart),o.setFromVector3(this.controlsEnd),e.phi+=this.easing(this.cameraClock/1e3)*(o.phi-e.phi),e.theta+=this.easing(this.cameraClock/1e3)*(o.theta-e.theta),e.radius+=this.easing(this.cameraClock/1e3)*(o.radius-e.radius),e.makeSafe(),this.controls.target.setFromSpherical(e)),this.controls.update()}this.controls.autoRotate&&this.controls.update(),this.stats&&this.stats.end(),this.render()}resetLips(){this.visemeNames.forEach((t=>{this.morphs.forEach((e=>{const i=e.morphTargetDictionary["viseme_"+t];void 0!==i&&(e.morphTargetInfluences[i]=0)}))}))}lipsyncGetProcessor(t,e="./"){if(!this.lipsync.hasOwnProperty(t)){const i=e+"lipsync-"+t.toLowerCase()+".mjs",o="Lipsync"+t.charAt(0).toUpperCase()+t.slice(1);import(i).then((e=>{this.lipsync[t]=new e[o]}))}}lipsyncPreProcessText(t,e){return(this.lipsync[e]||Object.values(this.lipsync)[0]).preProcessText(t)}lipsyncWordsToVisemes(t,e){return(this.lipsync[e]||Object.values(this.lipsync)[0]).wordsToVisemes(t)}speakText(t,e=null,i=null,o=null){const a=/[!\.\?\n\p{Extended_Pictographic}]/gu,n=/[ ]/gu,s=/[\p{L}\p{N},\.\p{Quotation_Mark}!€\$\+\p{Dash_Punctuation}%&\?]/gu,r=/[\p{Extended_Pictographic}]/gu,h=(e=e||{}).lipsyncLang||this.avatar.lipsyncLang||this.opt.lipsyncLang;let l="",d="",m=0,u=[],p=[];const y=[...t];for(let t=0;t<y.length;t++){const g=t===y.length-1,c=y[t].match(s);let x=y[t].match(a);const f=y[t].match(r),L=y[t].match(n);if(x&&!g&&!f&&y[t+1].match(a)&&(x=!1),i&&(l+=y[t]),c&&(o&&!o.every((e=>t<e[0]||t>e[1]))||(d+=y[t])),(L||x||g)&&(d.length&&(d=this.lipsyncPreProcessText(d,h),d.length&&u.push({mark:m,word:d})),l.length&&(p.push({mark:m,template:{name:"subtitles"},ts:[0],vs:{subtitles:[l]}}),l=""),d.length)){const t=this.lipsyncWordsToVisemes(d,h);if(t&&t.visemes&&t.visemes.length){const e=t.times[t.visemes.length-1]+t.durations[t.visemes.length-1];for(let i=0;i<t.visemes.length;i++){p.push({mark:m,template:{name:"viseme"},ts:[(t.times[i]-.6)/e,(t.times[i]+.5)/e,(t.times[i]+t.durations[i]+.5)/e],vs:{["viseme_"+t.visemes[i]]:[null,"PP"===t.visemes[i]||"FF"===t.visemes[i]?.9:.6,0]}})}}d="",m++}if(x||g){if(u.length||g&&p.length){const t={anim:p};i&&(t.onSubtitles=i),u.length&&!e.avatarMute&&(t.text=u,e.avatarMood&&(t.mood=e.avatarMood),e.ttsLang&&(t.lang=e.ttsLang),e.ttsVoice&&(t.voice=e.ttsVoice),e.ttsRate&&(t.rate=e.ttsRate),e.ttsVoice&&(t.pitch=e.ttsPitch),e.ttsVolume&&(t.volume=e.ttsVolume)),this.speechQueue.push(t),u=[],d="",m=0,p=[]}if(f){let e=this.animEmojis[y[t]];e&&e.link&&(e=this.animEmojis[e.link]),e&&this.speechQueue.push({emoji:e})}this.speechQueue.push({break:100})}}this.speechQueue.push({break:1e3}),this.startSpeaking()}async speakEmoji(t){let e=this.animEmojis[t];e&&e.link&&(e=this.animEmojis[e.link]),e&&this.speechQueue.push({emoji:e}),this.startSpeaking()}async speakBreak(t){this.speechQueue.push({break:t}),this.startSpeaking()}async speakMarker(t){this.speechQueue.push({marker:t}),this.startSpeaking()}async playBackgroundAudio(t){let e=await fetch(t),i=await e.arrayBuffer();this.stopBackgroundAudio(),this.audioBackgroundSource=this.audioCtx.createBufferSource(),this.audioBackgroundSource.loop=!0,this.audioBackgroundSource.buffer=await this.audioCtx.decodeAudioData(i),this.audioBackgroundSource.playbackRate.value=1/this.animSlowdownRate,this.audioBackgroundSource.connect(this.audioBackgroundGainNode),this.audioBackgroundSource.start(0)}stopBackgroundAudio(){try{this.audioBackgroundSource.stop()}catch(t){}this.audioBackgroundSource.disconnect()}async setReverb(t=null){if(t){let e=await fetch(t),i=await e.arrayBuffer();this.audioReverbNode.buffer=await this.audioCtx.decodeAudioData(i)}else{const t=this.audioCtx.sampleRate,e=this.audioCtx.createBuffer(2,t,t);e.getChannelData(0)[0]=1,e.getChannelData(1)[0]=1,this.audioReverbNode.buffer=e}}setMixerGain(t,e=null,i=0){null!==t&&(this.audioSpeechGainNode.gain.cancelScheduledValues(this.audioCtx.currentTime),i?(this.audioSpeechGainNode.gain.setValueAtTime(Math.max(this.audioSpeechGainNode.gain.value,1e-4),this.audioCtx.currentTime),this.audioSpeechGainNode.gain.exponentialRampToValueAtTime(Math.max(t,1e-4),this.audioCtx.currentTime+i)):this.audioSpeechGainNode.gain.setValueAtTime(t,this.audioCtx.currentTime)),null!==e&&(this.audioBackgroundGainNode.gain.cancelScheduledValues(this.audioCtx.currentTime),i?(this.audioBackgroundGainNode.gain.setValueAtTime(Math.max(this.audioBackgroundGainNode.gain.value,1e-4),this.audioCtx.currentTime),this.audioBackgroundGainNode.gain.exponentialRampToValueAtTime(Math.max(e,1e-4),this.audioCtx.currentTime+i)):this.audioBackgroundGainNode.gain.setValueAtTime(e,this.audioCtx.currentTime))}speakAudio(t,e=null,i=null){const o=(e=e||{}).lipsyncLang||this.avatar.lipsyncLang||this.opt.lipsyncLang,a={};if(t.words){let e=[];for(let a=0;a<t.words.length;a++){const n=t.words[a],s=t.wtimes[a];let r=t.wdurations[a];if(n.length&&(i&&e.push({template:{name:"subtitles"},ts:[s],vs:{subtitles:[" "+n]}}),!t.visemes)){const t=this.lipsyncPreProcessText(n,o),i=this.lipsyncWordsToVisemes(t,o);if(i&&i.visemes&&i.visemes.length){const t=i.times[i.visemes.length-1]+i.durations[i.visemes.length-1],o=Math.min(r,Math.max(0,r-150*i.visemes.length));let a=.6+this.convertRange(o,[0,r],[0,.4]);if(r=Math.min(r,200*i.visemes.length),t>0)for(let o=0;o<i.visemes.length;o++){const n=s+i.times[o]/t*r,h=i.durations[o]/t*r;e.push({template:{name:"viseme"},ts:[n-Math.min(60,2*h/3),n+Math.min(25,h/2),n+h+Math.min(60,h/2)],vs:{["viseme_"+i.visemes[o]]:[null,"PP"===i.visemes[o]||"FF"===i.visemes[o]?.9:a,0]}})}}}}if(t.visemes)for(let i=0;i<t.visemes.length;i++){const o=t.visemes[i],a=t.vtimes[i],n=t.vdurations[i];e.push({template:{name:"viseme"},ts:[a-2*n/3,a+n/2,a+n+n/2],vs:{["viseme_"+o]:[null,"PP"===o||"FF"===o?.9:.6,0]}})}if(t.markers)for(let i=0;i<t.markers.length;i++){const o=t.markers[i],a=t.mtimes[i];e.push({template:{name:"markers"},ts:[a],vs:{function:[o]}})}e.length&&(a.anim=e)}if(t.audio&&(a.audio=t.audio),t.anim?.name){let e=this.animFactory(t.anim,!1,1,1,!0);a.anim?a.anim.push(e):a.anim=[e]}i&&(a.onSubtitles=i),Object.keys(a).length&&(this.speechQueue.push(a),this.speechQueue.push({break:300}),this.lookAtCamera(500),this.startSpeaking())}async playAudio(t=!1){if(this.armature&&(!this.isAudioPlaying||t))if(this.isAudioPlaying=!0,this.audioPlaylist.length){const t=this.audioPlaylist.shift();if("suspended"===this.audioCtx.state||"interrupted"===this.audioCtx.state){const t=this.audioCtx.resume(),e=new Promise(((t,e)=>setTimeout((()=>e("p2")),1e3)));try{await Promise.race([t,e])}catch(t){return console.log("Can't play audio. Web Audio API suspended. This is often due to calling some speak method before the first user action, which is typically prevented by the browser."),void this.playAudio(!0)}}let e;if(Array.isArray(t.audio)){let i=this.concatArrayBuffers(t.audio);e=this.pcmToAudioBuffer(i)}else e=t.audio;this.audioSpeechSource=this.audioCtx.createBufferSource(),this.audioSpeechSource.buffer=e,this.audioSpeechSource.playbackRate.value=1/this.animSlowdownRate,this.audioSpeechSource.connect(this.audioAnalyzerNode),this.audioSpeechSource.addEventListener("ended",(()=>{this.audioSpeechSource.disconnect(),this.playAudio(!0)}),{once:!0});let i=0;t.anim&&(i=Math.abs(Math.min(0,...t.anim.map((t=>Math.min(...t.ts))))),t.anim.forEach((t=>{for(let e=0;e<t.ts.length;e++)t.ts[e]=this.animClock+t.ts[e]+i;this.animQueue.push(t)}))),this.audioSpeechSource.start(i/1e3)}else this.isAudioPlaying=!1,this.startSpeaking(!0)}async startSpeaking(t=!1){if(this.armature&&(!this.isSpeaking||t))if(this.stateName="speaking",this.isSpeaking=!0,this.speechQueue.length){let t=this.speechQueue.shift();if(t.emoji){this.lookAtCamera(500);let e=t.emoji.dt.reduce(((t,e)=>t+e),0);this.animQueue.push(this.animFactory(t.emoji)),setTimeout(this.startSpeaking.bind(this),e,!0)}else if(t.break)setTimeout(this.startSpeaking.bind(this),t.break,!0);else if(t.audio)this.lookAtCamera(500),this.speakWithHands(),this.audioPlaylist.push({anim:t.anim,audio:t.audio}),this.onSubtitles=t.onSubtitles||null,this.resetLips(),t.mood&&this.setMood(t.mood),this.playAudio();else if(t.text){this.lookAtCamera(500);try{let e="<speak>";t.text.forEach(((t,i)=>{i>0&&(e+=" <mark name='"+t.mark+"'/>"),e+=t.word.replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&apos;").replace(/^\p{Dash_Punctuation}$/gu,'<break time="750ms"/>')})),e+="</speak>";const i={method:"POST",headers:{"Content-Type":"application/json; charset=utf-8"},body:JSON.stringify({input:{ssml:e},voice:{languageCode:t.lang||this.avatar.ttsLang||this.opt.ttsLang,name:t.voice||this.avatar.ttsVoice||this.opt.ttsVoice},audioConfig:{audioEncoding:this.ttsAudioEncoding,speakingRate:(t.rate||this.avatar.ttsRate||this.opt.ttsRate)+this.mood.speech.deltaRate,pitch:(t.pitch||this.avatar.ttsPitch||this.opt.ttsPitch)+this.mood.speech.deltaPitch,volumeGainDb:(t.volume||this.avatar.ttsVolume||this.opt.ttsVolume)+this.mood.speech.deltaVolume},enableTimePointing:[1]})};this.opt.jwtGet&&"function"==typeof this.opt.jwtGet&&(i.headers.Authorization="Bearer "+await this.opt.jwtGet());const o=await fetch(this.opt.ttsEndpoint+(this.opt.ttsApikey?"?key="+this.opt.ttsApikey:""),i),a=await o.json();if(200===o.status&&a&&a.audioContent){const e=this.b64ToArrayBuffer(a.audioContent),i=await this.audioCtx.decodeAudioData(e);this.speakWithHands();const o=[0];let n=0;t.text.forEach(((t,e)=>{if(e>0){let e=o[o.length-1];a.timepoints[n]&&(e=1e3*a.timepoints[n].timeSeconds,a.timepoints[n].markName===""+t.mark&&n++),o.push(e)}}));const s=[{mark:0,time:0}];o.forEach(((t,e)=>{if(e>0){let i=t-o[e-1];s[e-1].duration=i,s.push({mark:e,time:t})}}));let r=1e3*i.duration;r>this.opt.ttsTrimEnd&&(r-=this.opt.ttsTrimEnd),s[s.length-1].duration=r-s[s.length-1].time,t.anim.forEach((t=>{const e=s[t.mark];if(e)for(let i=0;i<t.ts.length;i++)t.ts[i]=e.time+t.ts[i]*e.duration+this.opt.ttsTrimStart})),this.audioPlaylist.push({anim:t.anim,audio:i}),this.onSubtitles=t.onSubtitles||null,this.resetLips(),t.mood&&this.setMood(t.mood),this.playAudio()}else this.startSpeaking(!0)}catch(t){console.error("Error:",t),this.startSpeaking(!0)}}else t.anim?(this.onSubtitles=t.onSubtitles||null,this.resetLips(),t.mood&&this.setMood(t.mood),t.anim.forEach(((t,e)=>{for(let i=0;i<t.ts.length;i++)t.ts[i]=this.animClock+10*e;this.animQueue.push(t)})),setTimeout(this.startSpeaking.bind(this),10*t.anim.length,!0)):t.marker?("function"==typeof t.marker&&t.marker(),this.startSpeaking(!0)):this.startSpeaking(!0)}else this.stateName="idle",this.isSpeaking=!1}pauseSpeaking(){try{this.audioSpeechSource.stop()}catch(t){}this.audioPlaylist.length=0,this.stateName="idle",this.isSpeaking=!1,this.isAudioPlaying=!1,this.animQueue=this.animQueue.filter((t=>"viseme"!==t.template.name&&"subtitles"!==t.template.name&&"blendshapes"!==t.template.name)),this.armature&&(this.resetLips(),this.render())}stopSpeaking(){try{this.audioSpeechSource.stop()}catch(t){}this.audioPlaylist.length=0,this.speechQueue.length=0,this.animQueue=this.animQueue.filter((t=>"viseme"!==t.template.name&&"subtitles"!==t.template.name&&"blendshapes"!==t.template.name)),this.stateName="idle",this.isSpeaking=!1,this.isAudioPlaying=!1,this.armature&&(this.resetLips(),this.render())}async streamStart(t={},e=null,i=null,o=null){if(this.stopSpeaking(),this.isStreaming=!0,this.isSpeaking=!0,this.stateName="speaking",this.streamAudioStartTime=0,this.streamLipsyncQueue=[],this.streamLipsyncType=t.lipsyncType||this.streamLipsyncType||"visemes",this.streamLipsyncLang=t.lipsyncLang||this.streamLipsyncLang||this.avatar.lipsyncLang||this.opt.lipsyncLang,void 0!==t.sampleRate){const e=t.sampleRate;"number"==typeof e&&e>=8e3&&e<=96e3?e!==this.audioCtx.sampleRate&&this.initAudioGraph(e):console.warn("Invalid sampleRate provided. It must be a number between 8000 and 96000 Hz.")}if(void 0!==t.gain&&(this.audioStreamGainNode.gain.value=t.gain),!this.workletLoaded)try{const t=this.audioCtx.audioWorklet.addModule(y.href),e=new Promise(((t,e)=>setTimeout((()=>e(new Error("Worklet loading timed out"))),5e3)));await Promise.race([t,e]),this.workletLoaded=!0}catch(t){throw console.error("Failed to load audio worklet:",t),new Error("Failed to initialize streaming speech")}if(this.streamWorkletNode=new AudioWorkletNode(this.audioCtx,"playback-worklet"),this.streamWorkletNode.connect(this.audioStreamGainNode),this.streamWorkletNode.connect(this.audioAnalyzerNode),this.streamWorkletNode.port.onmessage=t=>{"playback-started"===t.data.type&&(this.streamAudioStartTime=this.animClock,this._processStreamLipsyncQueue(),this.speakWithHands(),e&&e()),"playback-ended"===t.data.type&&(this.streamStop(),i&&i())},this.resetLips(),this.lookAtCamera(500),t.mood&&this.setMood(t.mood),this.onSubtitles=o||null,"suspended"===this.audioCtx.state||"interrupted"===this.audioCtx.state){const t=this.audioCtx.resume(),e=new Promise(((t,e)=>setTimeout((()=>e("p2")),1e3)));try{await Promise.race([t,e])}catch(t){return void console.log("Can't play audio. Web Audio API suspended. This is often due to calling some speak method before the first user action, which is typically prevented by the browser.")}}}streamNotifyEnd(){this.isStreaming&&this.streamWorkletNode&&this.streamWorkletNode.port.postMessage({type:"no-more-data"})}streamStop(){if(this.streamWorkletNode){try{this.streamWorkletNode.port.postMessage({type:"stop"}),this.streamWorkletNode.disconnect()}catch(t){console.error("Error disconnecting streamWorkletNode:",t)}this.streamWorkletNode=null}this.isStreaming=!1,this.isSpeaking=!1,this.stateName="idle",this.streamAudioStartTime=0,this.armature&&(this.resetLips(),this.render())}_processStreamLipsyncQueue(){for(;this.streamLipsyncQueue.length>0;){const t=this.streamLipsyncQueue.shift();this._processLipsyncData(t,this.streamAudioStartTime)}}_processLipsyncData(t,e){if(t.visemes&&"visemes"==this.streamLipsyncType)for(let i=0;i<t.visemes.length;i++){const o=t.visemes[i],a=e+t.vtimes[i],n=t.vdurations[i],s={template:{name:"viseme"},ts:[a-2*n/3,a+n/2,a+n+n/2],vs:{["viseme_"+o]:[null,"PP"===o||"FF"===o?.9:.6,0]}};this.animQueue.push(s)}if(t.words&&(this.onSubtitles||"words"==this.streamLipsyncType))for(let i=0;i<t.words.length;i++){const o=t.words[i],a=t.wtimes[i];let n=t.wdurations[i];if(o.length&&(this.onSubtitles&&this.animQueue.push({template:{name:"subtitles"},ts:[e+a],vs:{subtitles:[" "+o]}}),"words"==this.streamLipsyncType)){const t=this.streamLipsyncLang||this.avatar.lipsyncLang||this.opt.lipsyncLang,i=this.lipsyncPreProcessText(o,t),s=this.lipsyncWordsToVisemes(i,t);if(s&&s.visemes&&s.visemes.length){const t=s.times[s.visemes.length-1]+s.durations[s.visemes.length-1],i=Math.min(n,Math.max(0,n-150*s.visemes.length));let o=.6+this.convertRange(i,[0,n],[0,.4]);if(n=Math.min(n,200*s.visemes.length),t>0)for(let i=0;i<s.visemes.length;i++){const r=e+a+s.times[i]/t*n,h=s.durations[i]/t*n;this.animQueue.push({template:{name:"viseme"},ts:[r-Math.min(60,2*h/3),r+Math.min(25,h/2),r+h+Math.min(60,h/2)],vs:{["viseme_"+s.visemes[i]]:[null,"PP"===s.visemes[i]||"FF"===s.visemes[i]?.9:o,0]}})}}}}if(t.anims&&"blendshapes"==this.streamLipsyncType)for(let i=0;i<t.anims.length;i++){let o=t.anims[i];o.delay+=e;let a=this.animFactory(o,!1,1,1,!0);this.animQueue.push(a)}}streamAudio(t){if(this.isStreaming&&this.streamWorkletNode&&(t.audio instanceof ArrayBuffer?this.streamWorkletNode.port.postMessage(t.audio,[t.audio]):t.audio instanceof Int16Array?this.streamWorkletNode.port.postMessage(t.audio):console.error("r.audio is not an ArrayBuffer or Int16Array. Cannot process audio of this type:",t.audio),t.visemes||t.anims||t.words)){if(!this.streamAudioStartTime)return void this.streamLipsyncQueue.push(t);this._processLipsyncData(t,this.streamAudioStartTime)}}makeEyeContact(t){this.animQueue.push(this.animFactory({name:"eyecontact",dt:[0,t],vs:{eyeContact:[1]}}))}lookAhead(t){if(t){let e=(Math.random()-.5)/4,i=(Math.random()-.5)/4,o=this.animQueue.findIndex((t=>"lookat"===t.template.name));-1!==o&&this.animQueue.splice(o,1);const a={name:"lookat",dt:[750,t],vs:{bodyRotateX:[e],bodyRotateY:[i],eyesRotateX:[-3*e+.1],eyesRotateY:[-5*i],browInnerUp:[[0,.7]],mouthLeft:[[0,.7]],mouthRight:[[0,.7]],eyeContact:[0],headMove:[0]}};this.animQueue.push(this.animFactory(a))}}lookAtCamera(t){this.avatar.hasOwnProperty("avatarIgnoreCamera")?this.avatar.avatarIgnoreCamera?this.lookAhead(t):this.lookAt(null,null,t):this.opt.avatarIgnoreCamera?this.lookAhead(t):this.lookAt(null,null,t)}lookAt(e,i,o){const a=this.nodeAvatar.getBoundingClientRect();this.objectLeftEye.updateMatrixWorld(!0),this.objectRightEye.updateMatrixWorld(!0);const n=(new t.Vector3).setFromMatrixPosition(this.objectLeftEye.matrixWorld),s=(new t.Vector3).setFromMatrixPosition(this.objectRightEye.matrixWorld),r=(new t.Vector3).addVectors(n,s).divideScalar(2);r.project(this.camera);let h=(r.x+1)/2*a.width+a.left,l=-(r.y-1)/2*a.height+a.top;null===e&&(e=h),null===i&&(i=l),g.copy(this.poseTarget.props["Hips.quaternion"]),g.multiply(this.poseTarget.props["Spine.quaternion"]),g.multiply(this.poseTarget.props["Spine1.quaternion"]),g.multiply(this.poseTarget.props["Spine2.quaternion"]),g.multiply(this.poseTarget.props["Neck.quaternion"]),g.multiply(this.poseTarget.props["Head.quaternion"]),c.setFromQuaternion(g);let d=c.x/(40/24),m=c.y/(9/4),u=Math.min(.4,Math.max(-.4,this.camera.rotation.x)),p=Math.min(.4,Math.max(-.4,this.camera.rotation.y)),y=Math.max(window.innerWidth-h,h),x=Math.max(window.innerHeight-l,l),f=this.convertRange(i,[l-x,l+x],[-.3,.6])-d+u,L=this.convertRange(e,[h-y,h+y],[-.8,.8])-m+p;f=Math.min(.6,Math.max(-.3,f)),L=Math.min(.8,Math.max(-.8,L));let R=(Math.random()-.5)/4,z=(Math.random()-.5)/4;if(o){let t=this.animQueue.findIndex((t=>"lookat"===t.template.name));-1!==t&&this.animQueue.splice(t,1);const e={name:"lookat",dt:[750,o],vs:{bodyRotateX:[f+R],bodyRotateY:[L+z],eyesRotateX:[-3*R+.1],eyesRotateY:[-5*z],browInnerUp:[[0,.7]],mouthLeft:[[0,.7]],mouthRight:[[0,.7]],eyeContact:[0],headMove:[0]}};this.animQueue.push(this.animFactory(e))}}touchAt(e,i){const o=this.nodeAvatar.getBoundingClientRect(),a=new t.Vector2((e-o.left)/o.width*2-1,-(i-o.top)/o.height*2+1),n=new t.Raycaster;n.setFromCamera(a,this.camera);const s=n.intersectObject(this.armature);if(s.length>0){const e=s[0].point,i=new t.Vector3,o=new t.Vector3;this.objectLeftArm.getWorldPosition(i),this.objectRightArm.getWorldPosition(o);i.distanceToSquared(e)<o.distanceToSquared(e)?(this.ikSolve({iterations:20,root:"LeftShoulder",effector:"LeftHandMiddle1",links:[{link:"LeftHand",minx:-.5,maxx:.5,miny:-1,maxy:1,minz:-.5,maxz:.5,maxAngle:.1},{link:"LeftForeArm",minx:-.5,maxx:1.5,miny:-1.5,maxy:1.5,minz:-.5,maxz:3,maxAngle:.2},{link:"LeftArm",minx:-1.5,maxx:1.5,miny:0,maxy:0,minz:-1,maxz:3}]},e,!1,1e3),this.setValue("handFistLeft",0)):(this.ikSolve({iterations:20,root:"RightShoulder",effector:"RightHandMiddle1",links:[{link:"RightHand",minx:-.5,maxx:.5,miny:-1,maxy:1,minz:-.5,maxz:.5,maxAngle:.1},{link:"RightForeArm",minx:-.5,maxx:1.5,miny:-1.5,maxy:1.5,minz:-3,maxz:.5,maxAngle:.2},{link:"RightArm",minx:-1.5,maxx:1.5,miny:0,maxy:0,minz:-1,maxz:3}]},e,!1,1e3),this.setValue("handFistRight",0))}else["LeftArm","LeftForeArm","LeftHand","RightArm","RightForeArm","RightHand"].forEach((t=>{let e=t+".quaternion";this.poseTarget.props[e].copy(this.getPoseTemplateProp(e)),this.poseTarget.props[e].t=this.animClock,this.poseTarget.props[e].d=1e3}));return s.length>0}speakWithHands(e=0,i=.5){if(this.mixer||this.gesture||!this.poseTarget.template.standing||this.poseTarget.template.bend||Math.random()>i)return;this.ikSolve({root:"LeftShoulder",effector:"LeftHandMiddle1",links:[{link:"LeftHand",minx:-.5,maxx:.5,miny:-1,maxy:1,minz:-.5,maxz:.5},{link:"LeftForeArm",minx:-.5,maxx:1.5,miny:-1.5,maxy:1.5,minz:-.5,maxz:3},{link:"LeftArm",minx:-1.5,maxx:1.5,miny:-1.5,maxy:1.5,minz:-1,maxz:3}]},new t.Vector3(this.gaussianRandom(0,.5),this.gaussianRandom(-.8,-.2),this.gaussianRandom(0,.5)),!0),this.ikSolve({root:"RightShoulder",effector:"RightHandMiddle1",links:[{link:"RightHand",minx:-.5,maxx:.5,miny:-1,maxy:1,minz:-.5,maxz:.5},{link:"RightForeArm",minx:-.5,maxx:1.5,miny:-1.5,maxy:1.5,minz:-3,maxz:.5},{link:"RightArm"}]},new t.Vector3(this.gaussianRandom(-.5,0),this.gaussianRandom(-.8,-.2),this.gaussianRandom(0,.5)),!0);const o=[],a=[];o.push(100+Math.round(500*Math.random())),a.push({duration:1e3,props:{"LeftHand.quaternion":(new t.Quaternion).setFromEuler(new t.Euler(0,-1-Math.random(),0)),"RightHand.quaternion":(new t.Quaternion).setFromEuler(new t.Euler(0,1+Math.random(),0))}}),["LeftArm","LeftForeArm","RightArm","RightForeArm"].forEach((t=>{a[0].props[t+".quaternion"]=this.ikMesh.getObjectByName(t).quaternion.clone()})),o.push(1e3+Math.round(500*Math.random())),a.push({duration:2e3,props:{}}),["LeftArm","LeftForeArm","RightArm","RightForeArm","LeftHand","RightHand"].forEach((t=>{a[1].props[t+".quaternion"]=null}));const n=this.animFactory({name:"talkinghands",delay:e,dt:o,vs:{moveto:a}});this.animQueue.push(n)}getSlowdownRate(t){return this.animSlowdownRate}setSlowdownRate(t){this.animSlowdownRate=t,this.audioSpeechSource.playbackRate.value=1/this.animSlowdownRate,this.audioBackgroundSource.playbackRate.value=1/this.animSlowdownRate}getAutoRotateSpeed(t){return this.controls.autoRotateSpeed}setAutoRotateSpeed(t){this.controls.autoRotateSpeed=t,this.controls.autoRotate=t>0}start(){this.armature&&!1===this.isRunning&&(this.audioCtx.resume(),this.animTimeLast=performance.now(),this.isRunning=!0,requestAnimationFrame(this.animate.bind(this)))}stop(){this.isRunning=!1,this.audioCtx.suspend()}startListening(t,e={},i=null){this.listeningAnalyzer=t,this.listeningAnalyzer.fftSize=256,this.listeningAnalyzer.smoothingTimeConstant=.1,this.listeningAnalyzer.minDecibels=-70,this.listeningAnalyzer.maxDecibels=-10,this.listeningOnchange=i&&"function"==typeof i?i:null,this.listeningSilenceThresholdLevel=e?.hasOwnProperty("listeningSilenceThresholdLevel")?e.listeningSilenceThresholdLevel:this.opt.listeningSilenceThresholdLevel,this.listeningSilenceThresholdMs=e?.hasOwnProperty("listeningSilenceThresholdMs")?e.listeningSilenceThresholdMs:this.opt.listeningSilenceThresholdMs,this.listeningSilenceDurationMax=e?.hasOwnProperty("listeningSilenceDurationMax")?e.listeningSilenceDurationMax:this.opt.listeningSilenceDurationMax,this.listeningActiveThresholdLevel=e?.hasOwnProperty("listeningActiveThresholdLevel")?e.listeningActiveThresholdLevel:this.opt.listeningActiveThresholdLevel,this.listeningActiveThresholdMs=e?.hasOwnProperty("listeningActiveThresholdMs")?e.listeningActiveThresholdMs:this.opt.listeningActiveThresholdMs,this.listeningActiveDurationMax=e?.hasOwnProperty("listeningActiveDurationMax")?e.listeningActiveDurationMax:this.opt.listeningActiveDurationMax,this.listeningActive=!1,this.listeningVolume=0,this.listeningTimer=0,this.listeningTimerTotal=0,this.isListening=!0}stopListening(){this.isListening=!1}async playAnimation(e,i=null,o=10,n=0,s=.01){if(!this.armature)return;let r=this.animClips.find((t=>t.url===e+"-"+n));if(r){let e=this.animQueue.find((t=>"pose"===t.template.name));e&&(e.ts[0]=1/0),Object.entries(r.pose.props).forEach((t=>{this.poseBase.props[t[0]]=t[1].clone(),this.poseTarget.props[t[0]]=t[1].clone(),this.poseTarget.props[t[0]].t=0,this.poseTarget.props[t[0]].d=1e3})),this.mixer=new t.AnimationMixer(this.armature),this.mixer.addEventListener("finished",this.stopAnimation.bind(this),{once:!0});const i=Math.ceil(o/r.clip.duration),a=this.mixer.clipAction(r.clip);a.setLoop(t.LoopRepeat,i),a.clampWhenFinished=!0,a.fadeIn(.5).play()}else{const r=new a;let h=await r.loadAsync(e,i);if(h&&h.animations&&h.animations[n]){let a=h.animations[n];const r={};a.tracks.forEach((e=>{e.name=e.name.replaceAll("mixamorig","");const i=e.name.split(".");if("position"===i[1]){for(let t=0;t<e.values.length;t++)e.values[t]=e.values[t]*s;r[e.name]=new t.Vector3(e.values[0],e.values[1],e.values[2])}else"quaternion"===i[1]?r[e.name]=new t.Quaternion(e.values[0],e.values[1],e.values[2],e.values[3]):"rotation"===i[1]&&(r[i[0]+".quaternion"]=(new t.Quaternion).setFromEuler(new t.Euler(e.values[0],e.values[1],e.values[2],"XYZ")).normalize())}));const l={props:r};r["Hips.position"]&&(r["Hips.position"].y<.5?l.lying=!0:l.standing=!0),this.animClips.push({url:e+"-"+n,clip:a,pose:l}),this.playAnimation(e,i,o,n,s)}else{const t="Animation "+e+" (ndx="+n+") not found";console.error(t)}}}stopAnimation(){if(this.mixer=null,this.gesture)for(let[t,e]of Object.entries(this.gesture))e.t=this.animClock,e.d=1e3,this.poseTarget.props.hasOwnProperty(t)&&(this.poseTarget.props[t].copy(e),this.poseTarget.props[t].t=this.animClock,this.poseTarget.props[t].d=1e3);let t=this.animQueue.find((t=>"pose"===t.template.name));t&&(t.ts[0]=this.animClock),this.setPoseFromTemplate(null)}async playPose(e,i=null,o=5,n=0,s=.01){if(!this.armature)return;let r=this.poseTemplates[e];if(!r){const t=this.animPoses.find((t=>t.url===e+"-"+n));t&&(r=t.pose)}if(r){this.poseName=e,this.mixer=null;let t=this.animQueue.find((t=>"pose"===t.template.name));t&&(t.ts[0]=this.animClock+1e3*o+2e3),this.setPoseFromTemplate(r)}else{const r=new a;let h=await r.loadAsync(e,i);if(h&&h.animations&&h.animations[n]){let a=h.animations[n];const r={};a.tracks.forEach((e=>{e.name=e.name.replaceAll("mixamorig","");const i=e.name.split(".");"position"===i[1]?r[e.name]=new t.Vector3(e.values[0]*s,e.values[1]*s,e.values[2]*s):"quaternion"===i[1]?r[e.name]=new t.Quaternion(e.values[0],e.values[1],e.values[2],e.values[3]):"rotation"===i[1]&&(r[i[0]+".quaternion"]=(new t.Quaternion).setFromEuler(new t.Euler(e.values[0],e.values[1],e.values[2],"XYZ")).normalize())}));const l={props:r};r["Hips.position"]&&(r["Hips.position"].y<.5?l.lying=!0:l.standing=!0),this.animPoses.push({url:e+"-"+n,pose:l}),this.playPose(e,i,o,n,s)}else{const t="Pose "+e+" (ndx="+n+") not found";console.error(t)}}}stopPose(){this.stopAnimation()}playGesture(e,i=3,o=!1,a=1e3){if(!this.armature)return;let n=this.gestureTemplates[e];if(n){this.gestureTimeout&&(clearTimeout(this.gestureTimeout),this.gestureTimeout=null);let s=this.animQueue.findIndex((t=>"talkinghands"===t.template.name));-1!==s&&(this.animQueue[s].ts=this.animQueue[s].ts.map((t=>0))),this.gesture=this.propsToThreeObjects(n),o&&(this.gesture=this.mirrorPose(this.gesture)),"namaste"===e&&"M"===this.avatar.body&&(this.gesture["RightArm.quaternion"].rotateTowards(new t.Quaternion(0,1,0,0),-.25),this.gesture["LeftArm.quaternion"].rotateTowards(new t.Quaternion(0,1,0,0),-.25));for(let[t,e]of Object.entries(this.gesture))e.t=this.animClock,e.d=a,this.poseTarget.props.hasOwnProperty(t)&&(this.poseTarget.props[t].copy(e),this.poseTarget.props[t].t=this.animClock,this.poseTarget.props[t].d=a);i&&Number.isFinite(i)&&(this.gestureTimeout=setTimeout(this.stopGesture.bind(this,a),1e3*i))}let s=this.animEmojis[e];if(s&&(s&&s.link&&(s=this.animEmojis[s.link]),s)){this.lookAtCamera(500);const t=this.animFactory(s);if(t.gesture=!0,i&&Number.isFinite(i)){const e=t.ts[0],o=t.ts[t.ts.length-1]-e;if(1e3*i-o>0){const a=[];for(let e=1;e<t.ts.length;e++)a.push(t.ts[e]-t.ts[e-1]);const n=s.template?.rescale||a.map((t=>t/o)),r=1e3*i-o;t.ts=t.ts.map(((t,i,o)=>0===i?e:o[i-1]+a[i-1]+n[i-1]*r))}else{const a=1e3*i/o;t.ts=t.ts.map((t=>e+a*(t-e)))}}this.animQueue.push(t)}}stopGesture(t=1e3){if(this.gestureTimeout&&(clearTimeout(this.gestureTimeout),this.gestureTimeout=null),this.gesture){const e=Object.entries(this.gesture);this.gesture=null;for(const[i,o]of e)this.poseTarget.props.hasOwnProperty(i)&&(this.poseTarget.props[i].copy(this.getPoseTemplateProp(i)),this.poseTarget.props[i].t=this.animClock,this.poseTarget.props[i].d=t)}let e=this.animQueue.findIndex((t=>t.gesture));-1!==e&&this.animQueue.splice(e,1)}ikSolve(e,i=null,o=!1,a=null){const n=new t.Vector3,s=new t.Vector3,r=new t.Vector3,h=new t.Vector3,l=new t.Quaternion,d=new t.Vector3,m=new t.Vector3,u=new t.Vector3,p=this.ikMesh.getObjectByName(e.root);p.position.setFromMatrixPosition(this.armature.getObjectByName(e.root).matrixWorld),p.quaternion.setFromRotationMatrix(this.armature.getObjectByName(e.root).matrixWorld),i&&o&&i.add(p.position);const y=this.ikMesh.getObjectByName(e.effector),c=e.links;c.forEach((t=>{t.bone=this.ikMesh.getObjectByName(t.link),t.bone.quaternion.copy(this.getPoseTemplateProp(t.link+".quaternion"))})),p.updateMatrixWorld(!0);const x=e.iterations||10;if(i)for(let e=0;e<x;e++){let e=!1;for(let o=0,a=c.length;o<a;o++){const a=c[o].bone;a.matrixWorld.decompose(h,l,d),l.invert(),s.setFromMatrixPosition(y.matrixWorld),r.subVectors(s,h),r.applyQuaternion(l),r.normalize(),n.subVectors(i,h),n.applyQuaternion(l),n.normalize();let p=n.dot(r);p>1?p=1:p<-1&&(p=-1),p=Math.acos(p),p<1e-5||(void 0!==c[o].minAngle&&p<c[o].minAngle&&(p=c[o].minAngle),void 0!==c[o].maxAngle&&p>c[o].maxAngle&&(p=c[o].maxAngle),m.crossVectors(r,n),m.normalize(),g.setFromAxisAngle(m,p),a.quaternion.multiply(g),a.rotation.setFromVector3(u.setFromEuler(a.rotation).clamp(new t.Vector3(void 0!==c[o].minx?c[o].minx:-1/0,void 0!==c[o].miny?c[o].miny:-1/0,void 0!==c[o].minz?c[o].minz:-1/0),new t.Vector3(void 0!==c[o].maxx?c[o].maxx:1/0,void 0!==c[o].maxy?c[o].maxy:1/0,void 0!==c[o].maxz?c[o].maxz:1/0))),a.updateMatrixWorld(!0),e=!0)}if(!e)break}a&&c.forEach((t=>{this.poseTarget.props[t.link+".quaternion"].copy(t.bone.quaternion),this.poseTarget.props[t.link+".quaternion"].t=this.animClock,this.poseTarget.props[t.link+".quaternion"].d=a}))}}export{z as TalkingHead};